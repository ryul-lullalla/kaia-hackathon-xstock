{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "asset_",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "SECONDS_PER_YEAR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "asset",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assetsOf",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "baseRatePerSecond",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "borrow",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "borrowCap",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "borrowIndex",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "collateral",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ICollateralVault"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "collateralAmount",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "collateralValueE18",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "convertToAssets",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "convertToShares",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtOf",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtValueE18",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isHealthy",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lastAccrual",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liqBonusBps",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liqThresholdBps",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        { "name": "borrower", "type": "address", "internalType": "address" },
        { "name": "repayAssets", "type": "uint256", "internalType": "uint256" },
        { "name": "seizeTo", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ltvBps",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxDeposit",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxMint",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxRedeem",
      "inputs": [
        { "name": "owner_", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxWithdraw",
      "inputs": [
        { "name": "owner_", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minCash",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "optimalUtilization",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPriceOracle"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewAccruedInterest",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewAccruedInterestOf",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewDeposit",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewLenderAccruedInterestOf",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewMint",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewRedeem",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewWithdraw",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "principalScaled",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redeem",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repay",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "onBehalfOf", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setIntegrations",
      "inputs": [
        { "name": "collateral_", "type": "address", "internalType": "address" },
        { "name": "oracle_", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setLiquidityParams",
      "inputs": [
        { "name": "_borrowCap", "type": "uint256", "internalType": "uint256" },
        { "name": "_minCash", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRateParams",
      "inputs": [
        { "name": "basePerSec", "type": "uint256", "internalType": "uint256" },
        {
          "name": "slope1PerSec",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "slope2PerSec",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "optimalU", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRiskParams",
      "inputs": [
        { "name": "_ltvBps", "type": "uint256", "internalType": "uint256" },
        {
          "name": "_liqThresholdBps",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "_liqBonusBps", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slope1PerSecond",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "slope2PerSecond",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalAssets",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalBorrows",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assets",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "IntegrationUpdated",
      "inputs": [
        {
          "name": "collateral",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "oracle",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LiquidityParamsUpdated",
      "inputs": [
        {
          "name": "borrowCap",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "minCash",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RateParamsUpdated",
      "inputs": [
        {
          "name": "baseRatePerSecond",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "slope1PerSecond",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "slope2PerSecond",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "optimalUtilization",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RiskParamsUpdated",
      "inputs": [
        {
          "name": "ltvBps",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "liqThresholdBps",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "liqBonusBps",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdraw",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "receiver",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assets",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ERC20InsufficientAllowance",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "allowance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InsufficientBalance",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "balance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidApprover",
      "inputs": [
        { "name": "approver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidReceiver",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSpender",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxDeposit",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxMint",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxRedeem",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxWithdraw",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "815:12232:37:-:0;;;1738:4;1714:28;;1788:4;1755:37;;1834:3;1805:32;;1976:680;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2085:10;2061:6;1582:113:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;4321:12:27;4335:19;4358:28;4379:6;4358:20;;;:28;;:::i;:::-;4320:66;;;;4418:7;:28;;4444:2;4418:28;;;4428:13;4418:28;4396:50;;;;;;;;;;4465:6;4456:15;;;;;;;;;;4310:168;;4283:195;1297:1:19;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:32;2061:7;:21;;;;2125:4:37::3;2111:11;:18;;;;2160:15;2139:11;;:37;;;;;;;;;;;;;;;;;;1494:8;2391:4;2383:33;;;;:::i;:::-;2362:17;:54;;;;1494:8;2467:5;2459:33;;;;:::i;:::-;2438:15;:54;;;;1494:8;2556:6;2548:33;;;;:::i;:::-;2527:15;:54;;;;2638:4;2617:18;:25;;;;1976:680:::0;815:12232;;4621:550:27;4688:7;4697:19;4729:12;4743:28;4783:6;4775:26;;4815:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4775:93;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4728:140;;;;4882:7;:39;;;;;4919:2;4893:15;:22;:28;;4882:39;4878:260;;;4937:24;4975:15;4964:38;;;;;;;;;;;;:::i;:::-;4937:65;;5040:15;5020:35;;:16;:35;5016:112;;5083:4;5095:16;5075:38;;;;;;;;;5016:112;4923:215;4878:260;5155:5;5162:1;5147:17;;;;;;4621:550;;;;:::o;2912:187:19:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:43:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:383::-;1113:6;1162:2;1150:9;1141:7;1137:23;1133:32;1130:119;;;1168:79;;:::i;:::-;1130:119;1288:1;1313:80;1385:7;1376:6;1365:9;1361:22;1313:80;:::i;:::-;1303:90;;1259:144;1027:383;;;;:::o;1416:99::-;1468:6;1502:5;1496:12;1486:22;;1416:99;;;:::o;1521:180::-;1569:77;1566:1;1559:88;1666:4;1663:1;1656:15;1690:4;1687:1;1680:15;1707:180;1755:77;1752:1;1745:88;1852:4;1849:1;1842:15;1876:4;1873:1;1866:15;1893:320;1937:6;1974:1;1968:4;1964:12;1954:22;;2021:1;2015:4;2011:12;2042:18;2032:81;;2098:4;2090:6;2086:17;2076:27;;2032:81;2160:2;2152:6;2149:14;2129:18;2126:38;2123:84;;2179:18;;:::i;:::-;2123:84;1944:269;1893:320;;;:::o;2219:141::-;2268:4;2291:3;2283:11;;2314:3;2311:1;2304:14;2348:4;2345:1;2335:18;2327:26;;2219:141;;;:::o;2366:93::-;2403:6;2450:2;2445;2438:5;2434:14;2430:23;2420:33;;2366:93;;;:::o;2465:107::-;2509:8;2559:5;2553:4;2549:16;2528:37;;2465:107;;;;:::o;2578:393::-;2647:6;2697:1;2685:10;2681:18;2720:97;2750:66;2739:9;2720:97;:::i;:::-;2838:39;2868:8;2857:9;2838:39;:::i;:::-;2826:51;;2910:4;2906:9;2899:5;2895:21;2886:30;;2959:4;2949:8;2945:19;2938:5;2935:30;2925:40;;2654:317;;2578:393;;;;;:::o;2977:77::-;3014:7;3043:5;3032:16;;2977:77;;;:::o;3060:60::-;3088:3;3109:5;3102:12;;3060:60;;;:::o;3126:142::-;3176:9;3209:53;3227:34;3236:24;3254:5;3236:24;:::i;:::-;3227:34;:::i;:::-;3209:53;:::i;:::-;3196:66;;3126:142;;;:::o;3274:75::-;3317:3;3338:5;3331:12;;3274:75;;;:::o;3355:269::-;3465:39;3496:7;3465:39;:::i;:::-;3526:91;3575:41;3599:16;3575:41;:::i;:::-;3567:6;3560:4;3554:11;3526:91;:::i;:::-;3520:4;3513:105;3431:193;3355:269;;;:::o;3630:73::-;3675:3;3696:1;3689:8;;3630:73;:::o;3709:189::-;3786:32;;:::i;:::-;3827:65;3885:6;3877;3871:4;3827:65;:::i;:::-;3762:136;3709:189;;:::o;3904:186::-;3964:120;3981:3;3974:5;3971:14;3964:120;;;4035:39;4072:1;4065:5;4035:39;:::i;:::-;4008:1;4001:5;3997:13;3988:22;;3964:120;;;3904:186;;:::o;4096:543::-;4197:2;4192:3;4189:11;4186:446;;;4231:38;4263:5;4231:38;:::i;:::-;4315:29;4333:10;4315:29;:::i;:::-;4305:8;4301:44;4498:2;4486:10;4483:18;4480:49;;;4519:8;4504:23;;4480:49;4542:80;4598:22;4616:3;4598:22;:::i;:::-;4588:8;4584:37;4571:11;4542:80;:::i;:::-;4201:431;;4186:446;4096:543;;;:::o;4645:117::-;4699:8;4749:5;4743:4;4739:16;4718:37;;4645:117;;;;:::o;4768:169::-;4812:6;4845:51;4893:1;4889:6;4881:5;4878:1;4874:13;4845:51;:::i;:::-;4841:56;4926:4;4920;4916:15;4906:25;;4819:118;4768:169;;;;:::o;4942:295::-;5018:4;5164:29;5189:3;5183:4;5164:29;:::i;:::-;5156:37;;5226:3;5223:1;5219:11;5213:4;5210:21;5202:29;;4942:295;;;;:::o;5242:1395::-;5359:37;5392:3;5359:37;:::i;:::-;5461:18;5453:6;5450:30;5447:56;;;5483:18;;:::i;:::-;5447:56;5527:38;5559:4;5553:11;5527:38;:::i;:::-;5612:67;5672:6;5664;5658:4;5612:67;:::i;:::-;5706:1;5730:4;5717:17;;5762:2;5754:6;5751:14;5779:1;5774:618;;;;6436:1;6453:6;6450:77;;;6502:9;6497:3;6493:19;6487:26;6478:35;;6450:77;6553:67;6613:6;6606:5;6553:67;:::i;:::-;6547:4;6540:81;6409:222;5744:887;;5774:618;5826:4;5822:9;5814:6;5810:22;5860:37;5892:4;5860:37;:::i;:::-;5919:1;5933:208;5947:7;5944:1;5941:14;5933:208;;;6026:9;6021:3;6017:19;6011:26;6003:6;5996:42;6077:1;6069:6;6065:14;6055:24;;6124:2;6113:9;6109:18;6096:31;;5970:4;5967:1;5963:12;5958:17;;5933:208;;;6169:6;6160:7;6157:19;6154:179;;;6227:9;6222:3;6218:19;6212:26;6270:48;6312:4;6304:6;6300:17;6289:9;6270:48;:::i;:::-;6262:6;6255:64;6177:156;6154:179;6379:1;6375;6367:6;6363:14;6359:22;6353:4;6346:36;5781:611;;;5744:887;;5334:1303;;;5242:1395;;:::o;6643:118::-;6730:24;6748:5;6730:24;:::i;:::-;6725:3;6718:37;6643:118;;:::o;6767:222::-;6860:4;6898:2;6887:9;6883:18;6875:26;;6911:71;6979:1;6968:9;6964:17;6955:6;6911:71;:::i;:::-;6767:222;;;;:::o;6995:180::-;7043:77;7040:1;7033:88;7140:4;7137:1;7130:15;7164:4;7161:1;7154:15;7367:185;7407:1;7424:20;7442:1;7424:20;:::i;:::-;7419:25;;7458:20;7476:1;7458:20;:::i;:::-;7453:25;;7497:1;7487:35;;7502:18;;:::i;:::-;7487:35;7544:1;7541;7537:9;7532:14;;7367:185;;;;:::o;7558:98::-;7609:6;7643:5;7637:12;7627:22;;7558:98;;;:::o;7662:147::-;7763:11;7800:3;7785:18;;7662:147;;;;:::o;7815:139::-;7904:6;7899:3;7894;7888:23;7945:1;7936:6;7931:3;7927:16;7920:27;7815:139;;;:::o;7960:386::-;8064:3;8092:38;8124:5;8092:38;:::i;:::-;8146:88;8227:6;8222:3;8146:88;:::i;:::-;8139:95;;8243:65;8301:6;8296:3;8289:4;8282:5;8278:16;8243:65;:::i;:::-;8333:6;8328:3;8324:16;8317:23;;8068:278;7960:386;;;;:::o;8352:271::-;8482:3;8504:93;8593:3;8584:6;8504:93;:::i;:::-;8497:100;;8614:3;8607:10;;8352:271;;;;:::o;8629:122::-;8702:24;8720:5;8702:24;:::i;:::-;8695:5;8692:35;8682:63;;8741:1;8738;8731:12;8682:63;8629:122;:::o;8757:143::-;8814:5;8845:6;8839:13;8830:22;;8861:33;8888:5;8861:33;:::i;:::-;8757:143;;;;:::o;8906:351::-;8976:6;9025:2;9013:9;9004:7;9000:23;8996:32;8993:119;;;9031:79;;:::i;:::-;8993:119;9151:1;9176:64;9232:7;9223:6;9212:9;9208:22;9176:64;:::i;:::-;9166:74;;9122:128;8906:351;;;;:::o;815:12232:37:-;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b50600436106103a2575f3560e01c806395d89b41116101e7578063c6e6f5921161010d578063d8dfeb45116100ab578063e6a69ab81161007a578063e6a69ab814610be8578063ef8b30f714610c06578063f00d9ab114610c36578063f2fde38b14610c66576103a2565b8063d8dfeb4514610b4c578063d905777e14610b6a578063d90e026414610b9a578063dd62ed3e14610bb8576103a2565b8063ced65b01116100e7578063ced65b0114610ab2578063d283e75f14610ace578063d4d9bc6814610afe578063d726ae9814610b2e576103a2565b8063c6e6f59214610a34578063c78e291914610a64578063ce96cb7714610a82576103a2565b8063b460af9411610185578063c09f28df11610154578063c09f28df14610988578063c5ebeaec146109b8578063c63d75b6146109d4578063c677041514610a04576103a2565b8063b460af94146108ee578063b857b0631461091e578063ba0876521461093a578063bdb30aa01461096a576103a2565b8063acb70815116101c1578063acb7081514610856578063b02867c314610872578063b2cd0fdc1461088e578063b3d7f6b9146108be576103a2565b806395d89b41146107ea578063a9059cbb14610808578063aa5af0fd14610838576103a2565b806347bd3718116102cc57806370a082311161026a5780637dc0d1d0116102395780637dc0d1d0146107605780638da5cb5b1461077e5780638eb80efe1461079c57806394bf804d146107ba576103a2565b806370a08231146106d8578063715018a6146107085780637748f5c6146107125780637b3baab414610742576103a2565b80634cdad506116102a65780634cdad5061461063c5780636290cd1c1461066c5780636e553f651461068a5780636ec6df0e146106ba576103a2565b806347bd3718146105d25780634914c008146105f05780634c642be61461060c576103a2565b806318160ddd11610344578063313ce56711610313578063313ce5671461054857806338d52e0f14610566578063402d267d1461058457806344d9dca6146105b4576103a2565b806318160ddd146104ac57806323b872dd146104ca578063276b7377146104fa5780632c62fa1014610518576103a2565b8063095ea7b311610380578063095ea7b3146104125780630a28a477146104425780630c0e717b1461047257806310af06a214610490576103a2565b806301e1d114146103a657806306fdde03146103c457806307a2d13a146103e2575b5f5ffd5b6103ae610c82565b6040516103bb9190613804565b60405180910390f35b6103cc610d1e565b6040516103d9919061388d565b60405180910390f35b6103fc60048036038101906103f791906138db565b610dae565b6040516104099190613804565b60405180910390f35b61042c60048036038101906104279190613960565b610dc0565b60405161043991906139b8565b60405180910390f35b61045c600480360381019061045791906138db565b610de2565b6040516104699190613804565b60405180910390f35b61047a610df5565b6040516104879190613804565b60405180910390f35b6104aa60048036038101906104a591906139d1565b610dfb565b005b6104b4610ec0565b6040516104c19190613804565b60405180910390f35b6104e460048036038101906104df9190613a0f565b610ec9565b6040516104f191906139b8565b60405180910390f35b610502610ef7565b60405161050f9190613804565b60405180910390f35b610532600480360381019061052d9190613a5f565b610efd565b60405161053f9190613804565b60405180910390f35b610550610f16565b60405161055d9190613aa5565b60405180910390f35b61056e610f4f565b60405161057b9190613acd565b60405180910390f35b61059e60048036038101906105999190613a5f565b610f76565b6040516105ab9190613804565b60405180910390f35b6105bc610f9f565b6040516105c99190613804565b60405180910390f35b6105da610fa5565b6040516105e79190613804565b60405180910390f35b61060a60048036038101906106059190613ae6565b610fab565b005b61062660048036038101906106219190613a5f565b6113ad565b6040516106339190613804565b60405180910390f35b610656600480360381019061065191906138db565b6113c2565b6040516106639190613804565b60405180910390f35b6106746113d4565b6040516106819190613804565b60405180910390f35b6106a4600480360381019061069f9190613b36565b6113da565b6040516106b19190613804565b60405180910390f35b6106c261145a565b6040516106cf9190613804565b60405180910390f35b6106f260048036038101906106ed9190613a5f565b611460565b6040516106ff9190613804565b60405180910390f35b6107106114a5565b005b61072c60048036038101906107279190613a5f565b6114b8565b6040516107399190613804565b60405180910390f35b61074a611502565b6040516107579190613b96565b60405180910390f35b61076861151b565b6040516107759190613c0a565b60405180910390f35b610786611540565b6040516107939190613acd565b60405180910390f35b6107a4611568565b6040516107b19190613804565b60405180910390f35b6107d460048036038101906107cf9190613b36565b61156e565b6040516107e19190613804565b60405180910390f35b6107f26115ee565b6040516107ff919061388d565b60405180910390f35b610822600480360381019061081d9190613960565b61167e565b60405161082f91906139b8565b60405180910390f35b6108406116a0565b60405161084d9190613804565b60405180910390f35b610870600480360381019061086b9190613b36565b6116a6565b005b61088c60048036038101906108879190613c23565b611841565b005b6108a860048036038101906108a39190613a5f565b6118f3565b6040516108b59190613804565b60405180910390f35b6108d860048036038101906108d391906138db565b611994565b6040516108e59190613804565b60405180910390f35b61090860048036038101906109039190613c87565b6119a7565b6040516109159190613804565b60405180910390f35b61093860048036038101906109339190613cd7565b611a29565b005b610954600480360381019061094f9190613c87565b611a7c565b6040516109619190613804565b60405180910390f35b610972611afe565b60405161097f9190613804565b60405180910390f35b6109a2600480360381019061099d9190613a5f565b611b04565b6040516109af9190613804565b60405180910390f35b6109d260048036038101906109cd91906138db565b611b5e565b005b6109ee60048036038101906109e99190613a5f565b611f38565b6040516109fb9190613804565b60405180910390f35b610a1e6004803603810190610a199190613a5f565b611f61565b604051610a2b9190613804565b60405180910390f35b610a4e6004803603810190610a4991906138db565b611fd7565b604051610a5b9190613804565b60405180910390f35b610a6c611fe9565b604051610a799190613804565b60405180910390f35b610a9c6004803603810190610a979190613a5f565b612019565b604051610aa99190613804565b60405180910390f35b610acc6004803603810190610ac79190613d15565b6120c8565b005b610ae86004803603810190610ae39190613a5f565b612176565b604051610af59190613804565b60405180910390f35b610b186004803603810190610b139190613a5f565b6121df565b604051610b2591906139b8565b60405180910390f35b610b3661221f565b604051610b439190613804565b60405180910390f35b610b54612225565b604051610b619190613d85565b60405180910390f35b610b846004803603810190610b7f9190613a5f565b61224a565b604051610b919190613804565b60405180910390f35b610ba26122fe565b604051610baf9190613804565b60405180910390f35b610bd26004803603810190610bcd91906139d1565b612304565b604051610bdf9190613804565b60405180910390f35b610bf0612386565b604051610bfd9190613804565b60405180910390f35b610c206004803603810190610c1b91906138db565b61238e565b604051610c2d9190613804565b60405180910390f35b610c506004803603810190610c4b9190613a5f565b6123a0565b604051610c5d9190613804565b60405180910390f35b610c806004803603810190610c7b9190613a5f565b6123ea565b005b5f5f610c8c610f4f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cc49190613acd565b602060405180830381865afa158015610cdf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d039190613db2565b9050610d0d61246e565b81610d189190613e0a565b91505090565b606060038054610d2d90613e6a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5990613e6a565b8015610da45780601f10610d7b57610100808354040283529160200191610da4565b820191905f5260205f20905b815481529060010190602001808311610d8757829003601f168201915b5050505050905090565b5f610db9825f6125b0565b9050919050565b5f5f610dca612608565b9050610dd781858561260f565b600191505092915050565b5f610dee826001612621565b9050919050565b60135481565b610e03612679565b81600f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060105f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb0bfb2912a9768cb682ae3465ef784fcb67b9b991c4a34181adff3b076d6ccc28282604051610eb4929190613e9a565b60405180910390a15050565b5f600254905090565b5f5f610ed3612608565b9050610ee0858285612700565b610eeb858585612793565b60019150509392505050565b60115481565b5f610f0f610f0a83611460565b610dae565b9050919050565b5f610f1f612883565b7f0000000000000000000000000000000000000000000000000000000000000000610f4a9190613ec1565b905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b60145481565b60075481565b610fb361288a565b5f73ffffffffffffffffffffffffffffffffffffffff16600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561105d57505f73ffffffffffffffffffffffffffffffffffffffff1660105f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b61109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390613f3f565b60405180910390fd5b5f82116110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590613fa7565b60405180910390fd5b6110e661289c565b5f6110f0846123a0565b90505f6110fc856114b8565b905080612710601254846111109190613fc5565b61111a9190614033565b1061115a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611151906140ad565b60405180910390fd5b61118e333086611168610f4f565b73ffffffffffffffffffffffffffffffffffffffff16612a6a909392919063ffffffff16565b5f6111b361119a612abf565b670de0b6b3a764000087612b659092919063ffffffff16565b90505f6127106013546127106111c99190613e0a565b836111d49190613fc5565b6111de9190614033565b90505f611205670de0b6b3a76400006111f5612c44565b84612b659092919063ffffffff16565b90505f611264600854670de0b6b3a7640000600e5f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b659092919063ffffffff16565b90505f8189106112745781611276565b885b90505f818361128591906140cb565b90505f81146112b2576112ad670de0b6b3a764000060085483612b659092919063ffffffff16565b6112b4565b5f5b600e5f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160075f82825461130691906140cb565b92505081905550600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04fb7c38c868c6040518463ffffffff1660e01b815260040161136b939291906140fe565b5f604051808303815f87803b158015611382575f5ffd5b505af1158015611394573d5f5f3e3d5ffd5b5050505050505050505050506113a8612cea565b505050565b600e602052805f5260405f205f915090505481565b5f6113cd825f6125b0565b9050919050565b600d5481565b5f5f6113e583610f76565b905080841115611430578284826040517f79012fb200000000000000000000000000000000000000000000000000000000815260040161142793929190614133565b60405180910390fd5b5f61143a8561238e565b905061144f611447612608565b858784612cf4565b809250505092915050565b600c5481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6114ad612679565b6114b65f612d7e565b565b5f5f6114c383612176565b90505f81036114d5575f9150506114fd565b6114f96114e0612abf565b670de0b6b3a764000083612b659092919063ffffffff16565b9150505b919050565b60095f9054906101000a900467ffffffffffffffff1681565b60105f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60125481565b5f5f61157983611f38565b9050808411156115c4578284826040517f284ff6670000000000000000000000000000000000000000000000000000000081526004016115bb93929190614133565b60405180910390fd5b5f6115ce85611994565b90506115e36115db612608565b858388612cf4565b809250505092915050565b6060600480546115fd90613e6a565b80601f016020809104026020016040519081016040528092919081815260200182805461162990613e6a565b80156116745780601f1061164b57610100808354040283529160200191611674565b820191905f5260205f20905b81548152906001019060200180831161165757829003601f168201915b5050505050905090565b5f5f611688612608565b9050611695818585612793565b600191505092915050565b60085481565b6116ae61288a565b5f82116116f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e790613fa7565b60405180910390fd5b6116f861289c565b61172c333084611706610f4f565b73ffffffffffffffffffffffffffffffffffffffff16612a6a909392919063ffffffff16565b5f611789600854670de0b6b3a7640000600e5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b659092919063ffffffff16565b90505f818410611799578161179b565b835b90505f81836117aa91906140cb565b90505f81146117d7576117d2670de0b6b3a764000060085483612b659092919063ffffffff16565b6117d9565b5f5b600e5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160075f82825461182b91906140cb565b9250508190555050505061183d612cea565b5050565b611849612679565b670de0b6b3a7640000811115611894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188b906141b2565b60405180910390fd5b83600a8190555082600b8190555081600c8190555080600d819055507fbe10c49900638e45eef24e4281b06e63a7b59041eb279f497fb30236bdcd3a78848484846040516118e594939291906141d0565b60405180910390a150505050565b5f600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161194e9190613acd565b602060405180830381865afa158015611969573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061198d9190613db2565b9050919050565b5f6119a08260016125b0565b9050919050565b5f5f6119b283612019565b9050808511156119fd578285826040517ffe9cceec0000000000000000000000000000000000000000000000000000000081526004016119f493929190614133565b60405180910390fd5b5f611a0786610de2565b9050611a1d611a14612608565b86868985612e41565b80925050509392505050565b611a31612679565b81601481905550806015819055507f6fbc2db60ee4b67b65b0d370606ce8ba8ed1bf03371f6038a0603da4ba2343458282604051611a70929190614213565b60405180910390a15050565b5f5f611a878361224a565b905080851115611ad2578285826040517fb94abeec000000000000000000000000000000000000000000000000000000008152600401611ac993929190614133565b60405180910390fd5b5f611adc866113c2565b9050611af2611ae9612608565b8686848a612e41565b80925050509392505050565b60155481565b5f5f611b0e611fe9565b90505f8103611b20575f915050611b59565b5f611b2a84612176565b90505f8103611b3d575f92505050611b59565b611b548160075484612b659092919063ffffffff16565b925050505b919050565b611b6661288a565b5f73ffffffffffffffffffffffffffffffffffffffff16600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015611c1057505f73ffffffffffffffffffffffffffffffffffffffff1660105f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b611c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4690613f3f565b60405180910390fd5b5f8111611c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8890613fa7565b60405180910390fd5b611c9961289c565b5f611ca2610f4f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611cda9190613acd565b602060405180830381865afa158015611cf5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d199190613db2565b905060155482611d299190613e0a565b811015611d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6290614284565b60405180910390fd5b5f60145414611dc75760145482600754611d859190613e0a565b1115611dc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dbd906142ec565b60405180910390fd5b5b5f611dd1336123a0565b90505f611ddd336114b8565b90505f611e04611deb612abf565b670de0b6b3a764000087612b659092919063ffffffff16565b90508082611e129190613e0a565b61271060115485611e239190613fc5565b611e2d9190614033565b1015611e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6590614354565b60405180910390fd5b8460075f828254611e7f9190613e0a565b92505081905550611ea5670de0b6b3a764000060085487612b659092919063ffffffff16565b600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611ef09190613e0a565b92505081905550611f293386611f04610f4f565b73ffffffffffffffffffffffffffffffffffffffff16612f219092919063ffffffff16565b50505050611f35612cea565b50565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f5f611f6b611fe9565b90505f8103611f7d575f915050611fd2565b5f611f8784611460565b90505f8103611f9a575f92505050611fd2565b5f611fa3610ec0565b90505f8103611fb7575f9350505050611fd2565b611fcc828285612b659092919063ffffffff16565b93505050505b919050565b5f611fe2825f612621565b9050919050565b5f5f611ff361246e565b90506007548111612004575f612013565b6007548161201291906140cb565b5b91505090565b5f5f612023610f4f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161205b9190613acd565b602060405180830381865afa158015612076573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061209a9190613db2565b90505f6120ae6120a985611460565b610dae565b90508082106120bd57806120bf565b815b92505050919050565b6120d0612679565b8183111580156120e2575061251c8211155b612121576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612118906143bc565b60405180910390fd5b8260118190555081601281905550806013819055507f06530df2d06374eed2221255d53550fa41ff0c0e1d49e93df27d5fff8a77bc7f838383604051612169939291906143da565b60405180910390a1505050565b5f5f6121d4600854670de0b6b3a7640000600e5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b659092919063ffffffff16565b905080915050919050565b5f5f6121ea836123a0565b90505f6121f6846114b8565b9050806127106012548461220a9190613fc5565b6122149190614033565b101592505050919050565b600b5481565b600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f612254610f4f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161228c9190613acd565b602060405180830381865afa1580156122a7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122cb9190613db2565b90505f6122d782611fd7565b90505f6122e385611460565b90508082106122f257806122f4565b815b9350505050919050565b600a5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6301e1338081565b5f612399825f612621565b9050919050565b5f5f6123ab836118f3565b90505f81036123bd575f9150506123e5565b6123e16123c8612c44565b670de0b6b3a764000083612b659092919063ffffffff16565b9150505b919050565b6123f2612679565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612462575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016124599190613acd565b60405180910390fd5b61246b81612d7e565b50565b5f60095f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1642148061249d57505f600754145b156124ac5760075490506125ad565b5f6124b5610f4f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016124ed9190613acd565b602060405180830381865afa158015612508573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061252c9190613db2565b90505f60095f9054906101000a900467ffffffffffffffff1667ffffffffffffffff164261255a91906140cb565b90505f61256983600754612f74565b90505f612596838361257b9190613fc5565b670de0b6b3a7640000600754612b659092919063ffffffff16565b9050806007546125a69190613e0a565b9450505050505b90565b5f61260060016125be610c82565b6125c89190613e0a565b6125d0612883565b600a6125dc919061453e565b6125e4610ec0565b6125ee9190613e0a565b848661303d909392919063ffffffff16565b905092915050565b5f33905090565b61261c838383600161308a565b505050565b5f61267161262d612883565b600a612639919061453e565b612641610ec0565b61264b9190613e0a565b6001612655610c82565b61265f9190613e0a565b848661303d909392919063ffffffff16565b905092915050565b612681612608565b73ffffffffffffffffffffffffffffffffffffffff1661269f611540565b73ffffffffffffffffffffffffffffffffffffffff16146126fe576126c2612608565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016126f59190613acd565b60405180910390fd5b565b5f61270b8484612304565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561278d578181101561277e578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161277593929190614133565b60405180910390fd5b61278c84848484035f61308a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612803575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016127fa9190613acd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612873575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161286a9190613acd565b60405180910390fd5b61287e838383613259565b505050565b5f5f905090565b612892613472565b6002600681905550565b60095f9054906101000a900467ffffffffffffffff1667ffffffffffffffff164214806128ca57505f600754145b156128fc574260095f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550612a68565b5f60095f9054906101000a900467ffffffffffffffff1667ffffffffffffffff164261292891906140cb565b90505f612933610f4f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161296b9190613acd565b602060405180830381865afa158015612986573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129aa9190613db2565b90505f6129b982600754612f74565b90505f83826129c89190613fc5565b90505f6129ea82670de0b6b3a7640000600754612b659092919063ffffffff16565b90508060075f8282546129fd9190613e0a565b92505081905550612a2382670de0b6b3a7640000600854612b659092919063ffffffff16565b60085f828254612a339190613e0a565b925050819055504260095f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050505b565b612a788484848460016134b0565b612ab957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612ab09190613acd565b60405180910390fd5b50505050565b5f60105f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09612b05610f4f565b6040518263ffffffff1660e01b8152600401612b219190613acd565b602060405180830381865afa158015612b3c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b609190613db2565b905090565b5f5f5f612b728686613521565b915091505f8203612b9757838181612b8d57612b8c614006565b5b0492505050612c3d565b818411612bb657612bb5612bb05f86146012601161353e565b613557565b5b5f8486880990508181118303925080820391505f855f038616905080860495508083049250600181825f0304019050808402831792505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808402955050505050505b9392505050565b5f60105f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09612c8a613568565b6040518263ffffffff1660e01b8152600401612ca69190613acd565b602060405180830381865afa158015612cc1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ce59190613db2565b905090565b6001600681905550565b612d07612cff610f4f565b853085612a6a565b612d1183826135fc565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051612d70929190614213565b60405180910390a350505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614612e8057612e7f838683612700565b5b612e8a838261367b565b612e9c612e95610f4f565b8584612f21565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051612f12929190614213565b60405180910390a45050505050565b612f2e83838360016136fa565b612f6f57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612f669190613acd565b60405180910390fd5b505050565b5f5f612f80848461375c565b9050600d548111612fc157670de0b6b3a764000081600b54612fa29190613fc5565b612fac9190614033565b600a54612fb99190613e0a565b915050613037565b5f670de0b6b3a7640000600d54600b54612fdb9190613fc5565b612fe59190614033565b600a54612ff29190613e0a565b90505f600d548361300391906140cb565b9050670de0b6b3a764000081600c5461301c9190613fc5565b6130269190614033565b826130319190613e0a565b93505050505b92915050565b5f61306b61304a836137b4565b801561306657505f848061306157613060614006565b5b868809115b6137e1565b613076868686612b65565b6130809190613e0a565b9050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036130fa575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016130f19190613acd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361316a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016131619190613acd565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015613253578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161324a9190613804565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036132a9578060025f82825461329d9190613e0a565b92505081905550613377565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015613332578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161332993929190614133565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036133be578060025f8282540392505081905550613408565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516134659190613804565b60405180910390a3505050565b6002600654036134ae576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f5f6323b872dd60e01b9050604051815f525f1960601c87166004525f1960601c86166024528460445260205f60645f5f8c5af1925060015f5114831661350e578383151615613502573d5f823e3d81fd5b5f883b113d1516831692505b806040525f606052505095945050505050565b5f5f5f198385098385029150818110828203039250509250929050565b5f613548846137e1565b82841802821890509392505050565b634e487b715f52806020526024601cfd5b5f600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2016bd46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135d3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135f7919061459c565b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361366c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016136639190613acd565b60405180910390fd5b6136775f8383613259565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036136eb575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016136e29190613acd565b60405180910390fd5b6136f6825f83613259565b5050565b5f5f63a9059cbb60e01b9050604051815f525f1960601c86166004528460245260205f60445f5f8b5af1925060015f5114831661374e578383151615613742573d5f823e3d81fd5b5f873b113d1516831692505b806040525050949350505050565b5f5f820361376c575f90506137ae565b5f82846137799190613e0a565b90505f810361378b575f9150506137ae565b80670de0b6b3a7640000846137a09190613fc5565b6137aa9190614033565b9150505b92915050565b5f600160028360038111156137cc576137cb6145c7565b5b6137d691906145f4565b60ff16149050919050565b5f8115159050919050565b5f819050919050565b6137fe816137ec565b82525050565b5f6020820190506138175f8301846137f5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61385f8261381d565b6138698185613827565b9350613879818560208601613837565b61388281613845565b840191505092915050565b5f6020820190508181035f8301526138a58184613855565b905092915050565b5f5ffd5b6138ba816137ec565b81146138c4575f5ffd5b50565b5f813590506138d5816138b1565b92915050565b5f602082840312156138f0576138ef6138ad565b5b5f6138fd848285016138c7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61392f82613906565b9050919050565b61393f81613925565b8114613949575f5ffd5b50565b5f8135905061395a81613936565b92915050565b5f5f60408385031215613976576139756138ad565b5b5f6139838582860161394c565b9250506020613994858286016138c7565b9150509250929050565b5f8115159050919050565b6139b28161399e565b82525050565b5f6020820190506139cb5f8301846139a9565b92915050565b5f5f604083850312156139e7576139e66138ad565b5b5f6139f48582860161394c565b9250506020613a058582860161394c565b9150509250929050565b5f5f5f60608486031215613a2657613a256138ad565b5b5f613a338682870161394c565b9350506020613a448682870161394c565b9250506040613a55868287016138c7565b9150509250925092565b5f60208284031215613a7457613a736138ad565b5b5f613a818482850161394c565b91505092915050565b5f60ff82169050919050565b613a9f81613a8a565b82525050565b5f602082019050613ab85f830184613a96565b92915050565b613ac781613925565b82525050565b5f602082019050613ae05f830184613abe565b92915050565b5f5f5f60608486031215613afd57613afc6138ad565b5b5f613b0a8682870161394c565b9350506020613b1b868287016138c7565b9250506040613b2c8682870161394c565b9150509250925092565b5f5f60408385031215613b4c57613b4b6138ad565b5b5f613b59858286016138c7565b9250506020613b6a8582860161394c565b9150509250929050565b5f67ffffffffffffffff82169050919050565b613b9081613b74565b82525050565b5f602082019050613ba95f830184613b87565b92915050565b5f819050919050565b5f613bd2613bcd613bc884613906565b613baf565b613906565b9050919050565b5f613be382613bb8565b9050919050565b5f613bf482613bd9565b9050919050565b613c0481613bea565b82525050565b5f602082019050613c1d5f830184613bfb565b92915050565b5f5f5f5f60808587031215613c3b57613c3a6138ad565b5b5f613c48878288016138c7565b9450506020613c59878288016138c7565b9350506040613c6a878288016138c7565b9250506060613c7b878288016138c7565b91505092959194509250565b5f5f5f60608486031215613c9e57613c9d6138ad565b5b5f613cab868287016138c7565b9350506020613cbc8682870161394c565b9250506040613ccd8682870161394c565b9150509250925092565b5f5f60408385031215613ced57613cec6138ad565b5b5f613cfa858286016138c7565b9250506020613d0b858286016138c7565b9150509250929050565b5f5f5f60608486031215613d2c57613d2b6138ad565b5b5f613d39868287016138c7565b9350506020613d4a868287016138c7565b9250506040613d5b868287016138c7565b9150509250925092565b5f613d6f82613bd9565b9050919050565b613d7f81613d65565b82525050565b5f602082019050613d985f830184613d76565b92915050565b5f81519050613dac816138b1565b92915050565b5f60208284031215613dc757613dc66138ad565b5b5f613dd484828501613d9e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f613e14826137ec565b9150613e1f836137ec565b9250828201905080821115613e3757613e36613ddd565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680613e8157607f821691505b602082108103613e9457613e93613e3d565b5b50919050565b5f604082019050613ead5f830185613abe565b613eba6020830184613abe565b9392505050565b5f613ecb82613a8a565b9150613ed683613a8a565b9250828201905060ff811115613eef57613eee613ddd565b5b92915050565b7f6e6f7420696e74656772617465640000000000000000000000000000000000005f82015250565b5f613f29600e83613827565b9150613f3482613ef5565b602082019050919050565b5f6020820190508181035f830152613f5681613f1d565b9050919050565b7f616d6f756e743d300000000000000000000000000000000000000000000000005f82015250565b5f613f91600883613827565b9150613f9c82613f5d565b602082019050919050565b5f6020820190508181035f830152613fbe81613f85565b9050919050565b5f613fcf826137ec565b9150613fda836137ec565b9250828202613fe8816137ec565b91508282048414831517613fff57613ffe613ddd565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61403d826137ec565b9150614048836137ec565b92508261405857614057614006565b5b828204905092915050565b7f6865616c746879000000000000000000000000000000000000000000000000005f82015250565b5f614097600783613827565b91506140a282614063565b602082019050919050565b5f6020820190508181035f8301526140c48161408b565b9050919050565b5f6140d5826137ec565b91506140e0836137ec565b92508282039050818111156140f8576140f7613ddd565b5b92915050565b5f6060820190506141115f830186613abe565b61411e60208301856137f5565b61412b6040830184613abe565b949350505050565b5f6060820190506141465f830186613abe565b61415360208301856137f5565b61416060408301846137f5565b949350505050565b7f6f7074696d616c3e3165313800000000000000000000000000000000000000005f82015250565b5f61419c600c83613827565b91506141a782614168565b602082019050919050565b5f6020820190508181035f8301526141c981614190565b9050919050565b5f6080820190506141e35f8301876137f5565b6141f060208301866137f5565b6141fd60408301856137f5565b61420a60608301846137f5565b95945050505050565b5f6040820190506142265f8301856137f5565b61423360208301846137f5565b9392505050565b7f696e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f61426e601683613827565b91506142798261423a565b602082019050919050565b5f6020820190508181035f83015261429b81614262565b9050919050565b7f63617000000000000000000000000000000000000000000000000000000000005f82015250565b5f6142d6600383613827565b91506142e1826142a2565b602082019050919050565b5f6020820190508181035f830152614303816142ca565b9050919050565b7f4c545600000000000000000000000000000000000000000000000000000000005f82015250565b5f61433e600383613827565b91506143498261430a565b602082019050919050565b5f6020820190508181035f83015261436b81614332565b9050919050565b7f696e76616c6964207468726573686f6c647300000000000000000000000000005f82015250565b5f6143a6601283613827565b91506143b182614372565b602082019050919050565b5f6020820190508181035f8301526143d38161439a565b9050919050565b5f6060820190506143ed5f8301866137f5565b6143fa60208301856137f5565b61440760408301846137f5565b949350505050565b5f8160011c9050919050565b5f5f8291508390505b6001851115614464578086048111156144405761443f613ddd565b5b600185161561444f5780820291505b808102905061445d8561440f565b9450614424565b94509492505050565b5f8261447c5760019050614537565b81614489575f9050614537565b816001811461449f57600281146144a9576144d8565b6001915050614537565b60ff8411156144bb576144ba613ddd565b5b8360020a9150848211156144d2576144d1613ddd565b5b50614537565b5060208310610133831016604e8410600b841016171561450d5782820a90508381111561450857614507613ddd565b5b614537565b61451a848484600161441b565b9250905081840481111561453157614530613ddd565b5b81810290505b9392505050565b5f614548826137ec565b915061455383613a8a565b92506145807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461446d565b905092915050565b5f8151905061459681613936565b92915050565b5f602082840312156145b1576145b06138ad565b5b5f6145be84828501614588565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f6145fe82613a8a565b915061460983613a8a565b92508261461957614618614006565b5b82820690509291505056fea2646970667358221220a9c37a9183635963bcb3d8ba9e1658bd6d84dfd4e970970fd0e20ef198407e4c64736f6c634300081c0033",
    "sourceMap": "815:12232:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8413:180;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6234:148:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7395:147:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1805:32:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2890:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2803:97:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1714:28:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6764:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5576:151:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5762:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6417:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1849:24:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1004:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11694:1351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1509:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7577:146:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1388:33:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7758:392:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1313:30:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:19;;;:::i;:::-;;5856:186:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1682:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1755:37:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8185:380:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1037:26:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11011:605;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3917:461;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7284:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7217:143:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8600:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3527:211:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9048:405:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1912:22:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6371:365;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10026:979;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6560:105:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6888:390:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6051:148:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6119:189:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8638:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3132:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5630:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7629:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1241:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1642:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8920:334;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1171:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1451:51:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7035:147:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7410:213:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8413:180:37;8466:7;8485:12;8507:7;:5;:7::i;:::-;8500:25;;;8534:4;8500:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8485:55;;8564:22;:20;:22::i;:::-;8557:4;:29;;;;:::i;:::-;8550:36;;;8413:180;:::o;1760:89:25:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;6234:148:27:-;6304:7;6330:45;6347:6;6355:19;6330:16;:45::i;:::-;6323:52;;6234:148;;;:::o;3902:186:25:-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;7395:147:27:-;7465:7;7491:44;7508:6;7516:18;7491:16;:44::i;:::-;7484:51;;7395:147;;;:::o;1805:32:37:-;;;;:::o;2890:236::-;1531:13:19;:11;:13::i;:::-;3012:11:37::1;2982:10;;:42;;;;;;;;;;;;;;;;;;3056:7;3034:6;;:30;;;;;;;;;;;;;;;;;;3079:40;3098:11;3111:7;3079:40;;;;;;;:::i;:::-;;;;;;;;2890:236:::0;;:::o;2803:97:25:-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;1714:28:37:-;;;;:::o;6764:118::-;6817:7;6843:32;6859:15;6869:4;6859:9;:15::i;:::-;6843;:32::i;:::-;6836:39;;6764:118;;;:::o;5576:151:27:-;5657:5;5703:17;:15;:17::i;:::-;5681:19;:39;;;;:::i;:::-;5674:46;;5576:151;:::o;5762:94::-;5808:7;5842:6;5827:22;;5762:94;:::o;6417:108::-;6475:7;6501:17;6494:24;;6417:108;;;:::o;1849:24:37:-;;;;:::o;1004:27::-;;;;:::o;11694:1351::-;2500:21:32;:19;:21::i;:::-;11840:1:37::1;11809:33;;11817:10;;;;;;;;;;;11809:33;;;;:66;;;;;11873:1;11846:29;;11854:6;;;;;;;;;;;11846:29;;;;11809:66;11801:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;11926:1;11912:11;:15;11904:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;11950:9;:7;:9::i;:::-;11998:11;12012:28;12031:8;12012:18;:28::i;:::-;11998:42;;12050:12;12065:22;12078:8;12065:12;:22::i;:::-;12050:37;;12135:4;12129:3;12111:15;;12105:3;:21;;;;:::i;:::-;:27;;;;:::i;:::-;:34;12097:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;12183:72;12216:10;12236:4;12243:11;12190:7;:5;:7::i;:::-;12183:32;;;;:72;;;;;;:::i;:::-;12297:16;12316:42;12335:16;:14;:16::i;:::-;12353:4;12316:11;:18;;:42;;;;;:::i;:::-;12297:61;;12368:16;12420:3;12405:11;;12399:3;:17;;;;:::i;:::-;12387:8;:30;;;;:::i;:::-;:36;;;;:::i;:::-;12368:55;;12433:16;12452:44;12468:4;12474:21;:19;:21::i;:::-;12452:8;:15;;:44;;;;;:::i;:::-;12433:63;;12529:29;12561:51;12594:11;;12607:4;12561:15;:25;12577:8;12561:25;;;;;;;;;;;;;;;;:32;;:51;;;;;:::i;:::-;12529:83;;12622:19;12658:21;12644:11;:35;:73;;12696:21;12644:73;;;12682:11;12644:73;12622:95;;12727:17;12771:11;12747:21;:35;;;;:::i;:::-;12727:55;;12833:1;12820:9;:14;:56;;12841:35;12858:4;12864:11;;12841:9;:16;;:35;;;;;:::i;:::-;12820:56;;;12837:1;12820:56;12792:15;:25;12808:8;12792:25;;;;;;;;;;;;;;;:84;;;;12902:11;12886:12;;:27;;;;;;;:::i;:::-;;;;;;;;12991:10;;;;;;;;;;;12965:44;;;13010:8;13020;13030:7;12965:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11791:1254;;;;;;;;2542:20:32::0;:18;:20::i;:::-;11694:1351:37;;;:::o;1509:50::-;;;;;;;;;;;;;;;;;:::o;7577:146:27:-;7645:7;7671:45;7688:6;7696:19;7671:16;:45::i;:::-;7664:52;;7577:146;;;:::o;1388:33:37:-;;;;:::o;7758:392:27:-;7833:7;7852:17;7872:20;7883:8;7872:10;:20::i;:::-;7852:40;;7915:9;7906:6;:18;7902:110;;;7973:8;7983:6;7991:9;7947:54;;;;;;;;;;;;;:::i;:::-;;;;;;;;7902:110;8022:14;8039:22;8054:6;8039:14;:22::i;:::-;8022:39;;8071:48;8080:12;:10;:12::i;:::-;8094:8;8104:6;8112;8071:8;:48::i;:::-;8137:6;8130:13;;;;7758:392;;;;:::o;1313:30:37:-;;;;:::o;2933:116:25:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:19:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5856:186:37:-;5913:7;5932:9;5944:12;5951:4;5944:6;:12::i;:::-;5932:24;;5975:1;5970;:6;5966:20;;5985:1;5978:8;;;;;5966:20;6003:32;6012:16;:14;:16::i;:::-;6030:4;6003:1;:8;;:32;;;;;:::i;:::-;5996:39;;;5856:186;;;;:::o;1083:25::-;;;;;;;;;;;;;:::o;1682:26::-;;;;;;;;;;;;;:::o;1638:85:19:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1755:37:37:-;;;;:::o;8185:380:27:-;8257:7;8276:17;8296;8304:8;8296:7;:17::i;:::-;8276:37;;8336:9;8327:6;:18;8323:107;;;8391:8;8401:6;8409:9;8368:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;8323:107;8440:14;8457:19;8469:6;8457:11;:19::i;:::-;8440:36;;8486:48;8495:12;:10;:12::i;:::-;8509:8;8519:6;8527;8486:8;:48::i;:::-;8552:6;8545:13;;;;8185:380;;;;:::o;1962:93:25:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;1037:26:37:-;;;;:::o;11011:605::-;2500:21:32;:19;:21::i;:::-;11111:1:37::1;11102:6;:10;11094:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;11135:9;:7;:9::i;:::-;11154:67;11187:10;11207:4;11214:6;11161:7;:5;:7::i;:::-;11154:32;;;;:67;;;;;;:::i;:::-;11231:29;11263:53;11298:11;;11311:4;11263:15;:27;11279:10;11263:27;;;;;;;;;;;;;;;;:34;;:53;;;;;:::i;:::-;11231:85;;11326:19;11357:21;11348:6;:30;:63;;11390:21;11348:63;;;11381:6;11348:63;11326:85;;11421:17;11465:11;11441:21;:35;;;;:::i;:::-;11421:55;;11529:1;11516:9;:14;:56;;11537:35;11554:4;11560:11;;11537:9;:16;;:35;;;;;:::i;:::-;11516:56;;;11533:1;11516:56;11486:15;:27;11502:10;11486:27;;;;;;;;;;;;;;;:86;;;;11598:11;11582:12;;:27;;;;;;;:::i;:::-;;;;;;;;11084:532;;;2542:20:32::0;:18;:20::i;:::-;11011:605:37;;:::o;3917:461::-;1531:13:19;:11;:13::i;:::-;4109:4:37::1;4097:8;:16;;4089:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4160:10;4140:17;:30;;;;4198:12;4180:15;:30;;;;4238:12;4220:15;:30;;;;4281:8;4260:18;:29;;;;4304:67;4322:10;4334:12;4348;4362:8;4304:67;;;;;;;;;:::i;:::-;;;;;;;;3917:461:::0;;;;:::o;7284:120::-;7345:7;7371:10;;;;;;;;;;;:20;;;7392:4;7371:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7364:33;;7284:120;;;:::o;7217:143:27:-;7283:7;7309:44;7326:6;7334:18;7309:16;:44::i;:::-;7302:51;;7217:143;;;:::o;8600:413::-;8691:7;8710:17;8730:18;8742:5;8730:11;:18::i;:::-;8710:38;;8771:9;8762:6;:18;8758:108;;;8830:5;8837:6;8845:9;8803:52;;;;;;;;;;;;;:::i;:::-;;;;;;;;8758:108;8876:14;8893:23;8909:6;8893:15;:23::i;:::-;8876:40;;8926:56;8936:12;:10;:12::i;:::-;8950:8;8960:5;8967:6;8975;8926:9;:56::i;:::-;9000:6;8993:13;;;;8600:413;;;;;:::o;3527:211:37:-;1531:13:19;:11;:13::i;:::-;3634:10:37::1;3622:9;:22;;;;3664:8;3654:7;:18;;;;3687:44;3710:10;3722:8;3687:44;;;;;;;:::i;:::-;;;;;;;;3527:211:::0;;:::o;9048:405:27:-;9137:7;9156:17;9176:16;9186:5;9176:9;:16::i;:::-;9156:36;;9215:9;9206:6;:18;9202:106;;;9272:5;9279:6;9287:9;9247:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;9202:106;9318:14;9335:21;9349:6;9335:13;:21::i;:::-;9318:38;;9366:56;9376:12;:10;:12::i;:::-;9390:8;9400:5;9407:6;9415;9366:9;:56::i;:::-;9440:6;9433:13;;;;9048:405;;;;;:::o;1912:22:37:-;;;;:::o;6371:365::-;6440:7;6459:15;6477:24;:22;:24::i;:::-;6459:42;;6526:1;6515:7;:12;6511:26;;6536:1;6529:8;;;;;6511:26;6547:16;6566:12;6573:4;6566:6;:12::i;:::-;6547:31;;6604:1;6592:8;:13;6588:27;;6614:1;6607:8;;;;;;6588:27;6691:38;6706:8;6716:12;;6691:7;:14;;:38;;;;;:::i;:::-;6684:45;;;;6371:365;;;;:::o;10026:979::-;2500:21:32;:19;:21::i;:::-;10129:1:37::1;10098:33;;10106:10;;;;;;;;;;;10098:33;;;;:66;;;;;10162:1;10135:29;;10143:6;;;;;;;;;;;10135:29;;;;10098:66;10090:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;10210:1;10201:6;:10;10193:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;10234:9;:7;:9::i;:::-;10253:14;10277:7;:5;:7::i;:::-;10270:25;;;10304:4;10270:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10253:57;;10347:7;;10338:6;:16;;;;:::i;:::-;10328:6;:26;;10320:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;10408:1;10395:9;;:14;10391:95;;10458:9;;10448:6;10433:12;;:21;;;;:::i;:::-;:34;;10425:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;10391:95;10548:14;10565:30;10584:10;10565:18;:30::i;:::-;10548:47;;10605:18;10626:24;10639:10;10626:12;:24::i;:::-;10605:45;;10660:18;10681:37;10695:16;:14;:16::i;:::-;10713:4;10681:6;:13;;:37;;;;;:::i;:::-;10660:58;;10774:10;10761;:23;;;;:::i;:::-;10754:3;10745:6;;10736;:15;;;;:::i;:::-;:21;;;;:::i;:::-;:48;;10728:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;10837:6;10821:12;;:22;;;;;;;:::i;:::-;;;;;;;;10884:32;10898:4;10904:11;;10884:6;:13;;:32;;;;;:::i;:::-;10853:15;:27;10869:10;10853:27;;;;;;;;;;;;;;;;:63;;;;;;;:::i;:::-;;;;;;;;10950:48;10979:10;10991:6;10957:7;:5;:7::i;:::-;10950:28;;;;:48;;;;;:::i;:::-;10080:925;;;;2542:20:32::0;:18;:20::i;:::-;10026:979:37;:::o;6560:105:27:-;6615:7;6641:17;6634:24;;6560:105;;;:::o;6888:390:37:-;6963:7;6982:15;7000:24;:22;:24::i;:::-;6982:42;;7049:1;7038:7;:12;7034:26;;7059:1;7052:8;;;;;7034:26;7070:18;7091:15;7101:4;7091:9;:15::i;:::-;7070:36;;7134:1;7120:10;:15;7116:29;;7144:1;7137:8;;;;;;7116:29;7155:14;7172:13;:11;:13::i;:::-;7155:30;;7209:1;7199:6;:11;7195:25;;7219:1;7212:8;;;;;;;7195:25;7237:34;7252:10;7264:6;7237:7;:14;;:34;;;;;:::i;:::-;7230:41;;;;;6888:390;;;;:::o;6051:148:27:-;6121:7;6147:45;6164:6;6172:19;6147:16;:45::i;:::-;6140:52;;6051:148;;;:::o;6119:189:37:-;6174:7;6193:15;6211:22;:20;:22::i;:::-;6193:40;;6260:12;;6250:7;:22;:51;;6300:1;6250:51;;;6285:12;;6275:7;:22;;;;:::i;:::-;6250:51;6243:58;;;6119:189;:::o;8638:276::-;8705:7;8724:14;8748:7;:5;:7::i;:::-;8741:25;;;8775:4;8741:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8724:57;;8791:19;8813:34;8829:17;8839:6;8829:9;:17::i;:::-;8813:15;:34::i;:::-;8791:56;;8873:11;8864:6;:20;:43;;8896:11;8864:43;;;8887:6;8864:43;8857:50;;;;8638:276;;;:::o;3132:389::-;1531:13:19;:11;:13::i;:::-;3268:16:37::1;3257:7;:27;;:55;;;;;3308:4;3288:16;:24;;3257:55;3249:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;3354:7;3345:6;:16;;;;3389;3371:15;:34;;;;3429:12;3415:11;:26;;;;3456:58;3474:7;3483:16;3501:12;3456:58;;;;;;;;:::i;:::-;;;;;;;;3132:389:::0;;;:::o;5630:220::-;5681:7;5750:17;5770:47;5799:11;;5812:4;5770:15;:21;5786:4;5770:21;;;;;;;;;;;;;;;;:28;;:47;;;;;:::i;:::-;5750:67;;5834:9;5827:16;;;5630:220;;;:::o;7629:210::-;7683:4;7699:11;7713:24;7732:4;7713:18;:24::i;:::-;7699:38;;7747:12;7762:18;7775:4;7762:12;:18::i;:::-;7747:33;;7828:4;7821:3;7803:15;;7797:3;:21;;;;:::i;:::-;:27;;;;:::i;:::-;:35;;7790:42;;;;7629:210;;;:::o;1241:30::-;;;;:::o;1642:34::-;;;;;;;;;;;;;:::o;8920:334::-;8985:7;9004:14;9028:7;:5;:7::i;:::-;9021:25;;;9055:4;9021:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9004:57;;9071:23;9097;9113:6;9097:15;:23::i;:::-;9071:49;;9130:19;9152:17;9162:6;9152:9;:17::i;:::-;9130:39;;9204:11;9186:15;:29;:61;;9236:11;9186:61;;;9218:15;9186:61;9179:68;;;;;8920:334;;;:::o;1171:32::-;;;;:::o;3455:140:25:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;1451:51:37:-;1494:8;1451:51;:::o;7035:147:27:-;7104:7;7130:45;7147:6;7155:19;7130:16;:45::i;:::-;7123:52;;7035:147;;;:::o;7410:213:37:-;7473:7;7492:11;7506:22;7523:4;7506:16;:22::i;:::-;7492:36;;7549:1;7542:3;:8;7538:22;;7559:1;7552:8;;;;;7538:22;7577:39;7588:21;:19;:21::i;:::-;7611:4;7577:3;:10;;:39;;;;;:::i;:::-;7570:46;;;7410:213;;;;:::o;2543:215:19:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;7884:475:37:-;7939:7;7981:11;;;;;;;;;;;7962:30;;:15;:30;:51;;;;8012:1;7996:12;;:17;7962:51;7958:101;;;8036:12;;8029:19;;;;7958:101;8068:12;8090:7;:5;:7::i;:::-;8083:25;;;8117:4;8083:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8068:55;;8133:10;8164:11;;;;;;;;;;;8146:29;;:15;:29;;;;:::i;:::-;8133:42;;8185:15;8203:41;8225:4;8231:12;;8203:21;:41::i;:::-;8185:59;;8254:16;8273:39;8303:2;8293:7;:12;;;;:::i;:::-;8307:4;8273:12;;:19;;:39;;;;;:::i;:::-;8254:58;;8344:8;8329:12;;:23;;;;:::i;:::-;8322:30;;;;;;7884:475;;:::o;9914:213:27:-;10011:7;10037:83;10067:1;10051:13;:11;:13::i;:::-;:17;;;;:::i;:::-;10092;:15;:17::i;:::-;10086:2;:23;;;;:::i;:::-;10070:13;:11;:13::i;:::-;:39;;;;:::i;:::-;10111:8;10037:6;:13;;:83;;;;;;:::i;:::-;10030:90;;9914:213;;;;:::o;656:96:30:-;709:7;735:10;728:17;;656:96;:::o;8630:128:25:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;9577:213:27:-;9674:7;9700:83;9736:17;:15;:17::i;:::-;9730:2;:23;;;;:::i;:::-;9714:13;:11;:13::i;:::-;:39;;;;:::i;:::-;9771:1;9755:13;:11;:13::i;:::-;:17;;;;:::i;:::-;9774:8;9700:6;:13;;:83;;;;;;:::i;:::-;9693:90;;9577:213;;;;:::o;1796:162:19:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10319:476:25:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;12030:90:27:-;12088:5;12112:1;12105:8;;12030:90;:::o;3219:247:32:-;3342:25;:23;:25::i;:::-;1899:1;3442:7;:17;;;;3219:247::o;9290:674:37:-;9351:11;;;;;;;;;;;9332:30;;:15;:30;:51;;;;9382:1;9366:12;;:17;9332:51;9328:139;;;9420:15;9399:11;;:37;;;;;;;;;;;;;;;;;;9450:7;;9328:139;9476:10;9507:11;;;;;;;;;;;9489:29;;:15;:29;;;;:::i;:::-;9476:42;;9528:12;9550:7;:5;:7::i;:::-;9543:25;;;9577:4;9543:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9528:55;;9593:15;9611:41;9633:4;9639:12;;9611:21;:41::i;:::-;9593:59;;9676:22;9711:2;9701:7;:12;;;;:::i;:::-;9676:37;;9737:23;9763:41;9783:14;9799:4;9763:12;;:19;;:41;;;;;:::i;:::-;9737:67;;9830:15;9814:12;;:31;;;;;;;:::i;:::-;;;;;;;;9870:40;9889:14;9905:4;9870:11;;:18;;:40;;;;;:::i;:::-;9855:11;;:55;;;;;;;:::i;:::-;;;;;;;;9941:15;9920:11;;:37;;;;;;;;;;;;;;;;;;9318:646;;;;;9290:674;:::o;1662:232:29:-;1767:47;1785:5;1792:4;1798:2;1802:5;1809:4;1767:17;:47::i;:::-;1762:126;;1870:5;1837:40;;;;;;;;;;;:::i;:::-;;;;;;;;1762:126;1662:232;;;;:::o;5272:106:37:-;5321:7;5347:6;;;;;;;;;;;:15;;;5363:7;:5;:7::i;:::-;5347:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5340:31;;5272:106;:::o;7242:3683:34:-;7324:14;7375:12;7389:11;7404:12;7411:1;7414;7404:6;:12::i;:::-;7374:42;;;;7506:1;7498:4;:9;7494:365;;7833:11;7827:3;:17;;;;;:::i;:::-;;;7820:24;;;;;;7494:365;7984:4;7969:11;:19;7965:142;;8008:84;8020:71;8043:1;8028:11;:16;1035:4:31;940;8020:7:34;:71::i;:::-;8008:11;:84::i;:::-;7965:142;8359:17;8510:11;8507:1;8504;8497:25;8484:38;;8636:3;8625:9;8622:18;8616:4;8612:29;8604:37;;8674:9;8669:3;8665:19;8658:26;;8902:12;8936:11;8932:1;:15;8917:11;:31;8902:46;;9084:4;9071:11;9067:22;9052:37;;9169:4;9164:3;9160:14;9153:21;;9330:1;9323:4;9316;9313:1;9309:12;9305:23;9301:31;9293:39;;9423:4;9416;:11;9409:18;;;;9762:15;9800:1;9785:11;9781:1;:15;9780:21;9762:39;;10047:7;10033:11;:21;10029:1;:25;10018:36;;;;10117:7;10103:11;:21;10099:1;:25;10088:36;;;;10189:7;10175:11;:21;10171:1;:25;10160:36;;;;10260:7;10246:11;:21;10242:1;:25;10231:36;;;;10333:7;10319:11;:21;10315:1;:25;10304:36;;;;10407:7;10393:11;:21;10389:1;:25;10378:36;;;;10874:7;10868:3;:13;10859:22;;10895:13;;;;;7242:3683;;;;;;:::o;5502:122:37:-;5556:7;5582:6;;;;;;;;;;;:15;;;5598:18;:16;:18::i;:::-;5582:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5575:42;;5502:122;:::o;3472:208:32:-;1857:1;3652:7;:21;;;;3472:208::o;10191:841:27:-;10861:74;10895:7;:5;:7::i;:::-;10905:6;10921:4;10928:6;10861:26;:74::i;:::-;10945:23;10951:8;10961:6;10945:5;:23::i;:::-;11000:8;10984:41;;10992:6;10984:41;;;11010:6;11018;10984:41;;;;;;;:::i;:::-;;;;;;;;10191:841;;;;:::o;2912:187:19:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;11099:925:27:-;11286:5;11276:15;;:6;:15;;;11272:84;;11307:38;11323:5;11330:6;11338;11307:15;:38::i;:::-;11272:84;11865:20;11871:5;11878:6;11865:5;:20::i;:::-;11895:57;11925:7;:5;:7::i;:::-;11935:8;11945:6;11895:22;:57::i;:::-;11995:5;11968:49;;11985:8;11968:49;;11977:6;11968:49;;;12002:6;12010;11968:49;;;;;;;:::i;:::-;;;;;;;;11099:925;;;;;:::o;1219:204:29:-;1306:37;1320:5;1327:2;1331:5;1338:4;1306:13;:37::i;:::-;1301:116;;1399:5;1366:40;;;;;;;;;;;:::i;:::-;;;;;;;;1301:116;1219:204;;;:::o;4633:633:37:-;4718:7;4737:9;4749:27;4762:4;4768:7;4749:12;:27::i;:::-;4737:39;;4809:18;;4804:1;:23;4800:171;;4956:4;4951:1;4933:15;;:19;;;;:::i;:::-;4932:28;;;;:::i;:::-;4912:17;;:48;;;;:::i;:::-;4905:55;;;;;4800:171;5055:21;5140:4;5118:18;;5100:15;;:36;;;;:::i;:::-;5099:45;;;;:::i;:::-;5079:17;;:65;;;;:::i;:::-;5055:89;;5154:14;5175:18;;5171:1;:22;;;;:::i;:::-;5154:39;;5255:4;5245:6;5227:15;;:24;;;;:::i;:::-;5226:33;;;;:::i;:::-;5210:13;:49;;;;:::i;:::-;5203:56;;;;;4633:633;;;;;:::o;11054:238:34:-;11155:7;11209:76;11225:26;11242:8;11225:16;:26::i;:::-;:59;;;;;11283:1;11268:11;11255:25;;;;;:::i;:::-;;11265:1;11262;11255:25;:29;11225:59;11209:15;:76::i;:::-;11181:25;11188:1;11191;11194:11;11181:6;:25::i;:::-;:104;;;;:::i;:::-;11174:111;;11054:238;;;;;;:::o;9605:432:25:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;3063:150:32:-;1899:1;3125:7;;:18;3121:86;;3166:30;;;;;;;;;;;;;;3121:86;3063:150::o;10151:1384:29:-;10309:12;10333:15;10351:28;;;10333:46;;10446:4;10440:11;10477:8;10471:4;10464:22;10534:1;10530:6;10526:2;10522:15;10516:4;10512:26;10506:4;10499:40;10585:1;10581:6;10577:2;10573:15;10569:2;10565:24;10559:4;10552:38;10616:5;10610:4;10603:19;10680:4;10677:1;10671:4;10668:1;10665;10658:5;10651;10646:39;10635:50;;10897:1;10890:4;10884:11;10881:18;10872:7;10868:32;10858:603;;11029:6;11019:7;11012:15;11008:28;11005:162;;;11082:16;11079:1;11074:3;11059:40;11132:16;11127:3;11120:29;11005:162;11443:1;11435:5;11423:18;11420:25;11401:16;11394:24;11390:56;11381:7;11377:70;11366:81;;10858:603;11487:3;11481:4;11474:17;11517:1;11511:4;11504:15;10415:1114;;10151:1384;;;;;;;:::o;1027:550:34:-;1088:12;1102:11;1478:1;1474:6;1471:1;1468;1461:20;1508:1;1505;1501:9;1494:16;;1556:3;1552:2;1549:11;1543:3;1539:2;1535:12;1531:30;1523:38;;1437:134;1027:550;;;;;:::o;5071:294::-;5149:7;5321:26;5337:9;5321:15;:26::i;:::-;5316:1;5312;:5;5311:36;5306:1;:42;5299:49;;5071:294;;;;;:::o;1776:194:31:-;1881:10;1875:4;1868:24;1918:4;1912;1905:18;1949:4;1943;1936:18;5384:112:37;5435:7;5461:10;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5454:35;;5384:112;:::o;7362:208:25:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;8368:1235:29:-;8462:12;8486:15;8504:24;;;8486:42;;8595:4;8589:11;8626:8;8620:4;8613:22;8681:1;8677:6;8673:2;8669:15;8665:2;8661:24;8655:4;8648:38;8712:5;8706:4;8699:19;8776:4;8773:1;8767:4;8764:1;8761;8754:5;8747;8742:39;8731:50;;8993:1;8986:4;8980:11;8977:18;8968:7;8964:32;8954:603;;9125:6;9115:7;9108:15;9104:28;9101:162;;;9178:16;9175:1;9170:3;9155:40;9228:16;9223:3;9216:29;9101:162;9539:1;9531:5;9519:18;9516:25;9497:16;9490:24;9486:56;9477:7;9473:70;9462:81;;8954:603;9583:3;9577:4;9570:17;8564:1033;;8368:1235;;;;;;:::o;4384:243:37:-;4460:7;4494:1;4483:7;:12;4479:26;;4504:1;4497:8;;;;4479:26;4515:13;4538:7;4531:4;:14;;;;:::i;:::-;4515:30;;4568:1;4559:5;:10;4555:24;;4578:1;4571:8;;;;;4555:24;4615:5;4607:4;4597:7;:14;;;;:::i;:::-;4596:24;;;;:::i;:::-;4589:31;;;4384:243;;;;;:::o;32020:122:34:-;32088:4;32134:1;32129;32117:8;32111:15;;;;;;;;:::i;:::-;;:19;;;;:::i;:::-;:24;;;32104:31;;32020:122;;;:::o;34795:145:35:-;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;7:77:43:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:122;2077:24;2095:5;2077:24;:::i;:::-;2070:5;2067:35;2057:63;;2116:1;2113;2106:12;2057:63;2004:122;:::o;2132:139::-;2178:5;2216:6;2203:20;2194:29;;2232:33;2259:5;2232:33;:::i;:::-;2132:139;;;;:::o;2277:329::-;2336:6;2385:2;2373:9;2364:7;2360:23;2356:32;2353:119;;;2391:79;;:::i;:::-;2353:119;2511:1;2536:53;2581:7;2572:6;2561:9;2557:22;2536:53;:::i;:::-;2526:63;;2482:117;2277:329;;;;:::o;2612:126::-;2649:7;2689:42;2682:5;2678:54;2667:65;;2612:126;;;:::o;2744:96::-;2781:7;2810:24;2828:5;2810:24;:::i;:::-;2799:35;;2744:96;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:474::-;3187:6;3195;3244:2;3232:9;3223:7;3219:23;3215:32;3212:119;;;3250:79;;:::i;:::-;3212:119;3370:1;3395:53;3440:7;3431:6;3420:9;3416:22;3395:53;:::i;:::-;3385:63;;3341:117;3497:2;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3468:118;3119:474;;;;;:::o;3599:90::-;3633:7;3676:5;3669:13;3662:21;3651:32;;3599:90;;;:::o;3695:109::-;3776:21;3791:5;3776:21;:::i;:::-;3771:3;3764:34;3695:109;;:::o;3810:210::-;3897:4;3935:2;3924:9;3920:18;3912:26;;3948:65;4010:1;3999:9;3995:17;3986:6;3948:65;:::i;:::-;3810:210;;;;:::o;4026:474::-;4094:6;4102;4151:2;4139:9;4130:7;4126:23;4122:32;4119:119;;;4157:79;;:::i;:::-;4119:119;4277:1;4302:53;4347:7;4338:6;4327:9;4323:22;4302:53;:::i;:::-;4292:63;;4248:117;4404:2;4430:53;4475:7;4466:6;4455:9;4451:22;4430:53;:::i;:::-;4420:63;;4375:118;4026:474;;;;;:::o;4506:619::-;4583:6;4591;4599;4648:2;4636:9;4627:7;4623:23;4619:32;4616:119;;;4654:79;;:::i;:::-;4616:119;4774:1;4799:53;4844:7;4835:6;4824:9;4820:22;4799:53;:::i;:::-;4789:63;;4745:117;4901:2;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4872:118;5029:2;5055:53;5100:7;5091:6;5080:9;5076:22;5055:53;:::i;:::-;5045:63;;5000:118;4506:619;;;;;:::o;5131:329::-;5190:6;5239:2;5227:9;5218:7;5214:23;5210:32;5207:119;;;5245:79;;:::i;:::-;5207:119;5365:1;5390:53;5435:7;5426:6;5415:9;5411:22;5390:53;:::i;:::-;5380:63;;5336:117;5131:329;;;;:::o;5466:86::-;5501:7;5541:4;5534:5;5530:16;5519:27;;5466:86;;;:::o;5558:112::-;5641:22;5657:5;5641:22;:::i;:::-;5636:3;5629:35;5558:112;;:::o;5676:214::-;5765:4;5803:2;5792:9;5788:18;5780:26;;5816:67;5880:1;5869:9;5865:17;5856:6;5816:67;:::i;:::-;5676:214;;;;:::o;5896:118::-;5983:24;6001:5;5983:24;:::i;:::-;5978:3;5971:37;5896:118;;:::o;6020:222::-;6113:4;6151:2;6140:9;6136:18;6128:26;;6164:71;6232:1;6221:9;6217:17;6208:6;6164:71;:::i;:::-;6020:222;;;;:::o;6248:619::-;6325:6;6333;6341;6390:2;6378:9;6369:7;6365:23;6361:32;6358:119;;;6396:79;;:::i;:::-;6358:119;6516:1;6541:53;6586:7;6577:6;6566:9;6562:22;6541:53;:::i;:::-;6531:63;;6487:117;6643:2;6669:53;6714:7;6705:6;6694:9;6690:22;6669:53;:::i;:::-;6659:63;;6614:118;6771:2;6797:53;6842:7;6833:6;6822:9;6818:22;6797:53;:::i;:::-;6787:63;;6742:118;6248:619;;;;;:::o;6873:474::-;6941:6;6949;6998:2;6986:9;6977:7;6973:23;6969:32;6966:119;;;7004:79;;:::i;:::-;6966:119;7124:1;7149:53;7194:7;7185:6;7174:9;7170:22;7149:53;:::i;:::-;7139:63;;7095:117;7251:2;7277:53;7322:7;7313:6;7302:9;7298:22;7277:53;:::i;:::-;7267:63;;7222:118;6873:474;;;;;:::o;7353:101::-;7389:7;7429:18;7422:5;7418:30;7407:41;;7353:101;;;:::o;7460:115::-;7545:23;7562:5;7545:23;:::i;:::-;7540:3;7533:36;7460:115;;:::o;7581:218::-;7672:4;7710:2;7699:9;7695:18;7687:26;;7723:69;7789:1;7778:9;7774:17;7765:6;7723:69;:::i;:::-;7581:218;;;;:::o;7805:60::-;7833:3;7854:5;7847:12;;7805:60;;;:::o;7871:142::-;7921:9;7954:53;7972:34;7981:24;7999:5;7981:24;:::i;:::-;7972:34;:::i;:::-;7954:53;:::i;:::-;7941:66;;7871:142;;;:::o;8019:126::-;8069:9;8102:37;8133:5;8102:37;:::i;:::-;8089:50;;8019:126;;;:::o;8151:148::-;8223:9;8256:37;8287:5;8256:37;:::i;:::-;8243:50;;8151:148;;;:::o;8305:175::-;8414:59;8467:5;8414:59;:::i;:::-;8409:3;8402:72;8305:175;;:::o;8486:266::-;8601:4;8639:2;8628:9;8624:18;8616:26;;8652:93;8742:1;8731:9;8727:17;8718:6;8652:93;:::i;:::-;8486:266;;;;:::o;8758:765::-;8844:6;8852;8860;8868;8917:3;8905:9;8896:7;8892:23;8888:33;8885:120;;;8924:79;;:::i;:::-;8885:120;9044:1;9069:53;9114:7;9105:6;9094:9;9090:22;9069:53;:::i;:::-;9059:63;;9015:117;9171:2;9197:53;9242:7;9233:6;9222:9;9218:22;9197:53;:::i;:::-;9187:63;;9142:118;9299:2;9325:53;9370:7;9361:6;9350:9;9346:22;9325:53;:::i;:::-;9315:63;;9270:118;9427:2;9453:53;9498:7;9489:6;9478:9;9474:22;9453:53;:::i;:::-;9443:63;;9398:118;8758:765;;;;;;;:::o;9529:619::-;9606:6;9614;9622;9671:2;9659:9;9650:7;9646:23;9642:32;9639:119;;;9677:79;;:::i;:::-;9639:119;9797:1;9822:53;9867:7;9858:6;9847:9;9843:22;9822:53;:::i;:::-;9812:63;;9768:117;9924:2;9950:53;9995:7;9986:6;9975:9;9971:22;9950:53;:::i;:::-;9940:63;;9895:118;10052:2;10078:53;10123:7;10114:6;10103:9;10099:22;10078:53;:::i;:::-;10068:63;;10023:118;9529:619;;;;;:::o;10154:474::-;10222:6;10230;10279:2;10267:9;10258:7;10254:23;10250:32;10247:119;;;10285:79;;:::i;:::-;10247:119;10405:1;10430:53;10475:7;10466:6;10455:9;10451:22;10430:53;:::i;:::-;10420:63;;10376:117;10532:2;10558:53;10603:7;10594:6;10583:9;10579:22;10558:53;:::i;:::-;10548:63;;10503:118;10154:474;;;;;:::o;10634:619::-;10711:6;10719;10727;10776:2;10764:9;10755:7;10751:23;10747:32;10744:119;;;10782:79;;:::i;:::-;10744:119;10902:1;10927:53;10972:7;10963:6;10952:9;10948:22;10927:53;:::i;:::-;10917:63;;10873:117;11029:2;11055:53;11100:7;11091:6;11080:9;11076:22;11055:53;:::i;:::-;11045:63;;11000:118;11157:2;11183:53;11228:7;11219:6;11208:9;11204:22;11183:53;:::i;:::-;11173:63;;11128:118;10634:619;;;;;:::o;11259:152::-;11335:9;11368:37;11399:5;11368:37;:::i;:::-;11355:50;;11259:152;;;:::o;11417:183::-;11530:63;11587:5;11530:63;:::i;:::-;11525:3;11518:76;11417:183;;:::o;11606:274::-;11725:4;11763:2;11752:9;11748:18;11740:26;;11776:97;11870:1;11859:9;11855:17;11846:6;11776:97;:::i;:::-;11606:274;;;;:::o;11886:143::-;11943:5;11974:6;11968:13;11959:22;;11990:33;12017:5;11990:33;:::i;:::-;11886:143;;;;:::o;12035:351::-;12105:6;12154:2;12142:9;12133:7;12129:23;12125:32;12122:119;;;12160:79;;:::i;:::-;12122:119;12280:1;12305:64;12361:7;12352:6;12341:9;12337:22;12305:64;:::i;:::-;12295:74;;12251:128;12035:351;;;;:::o;12392:180::-;12440:77;12437:1;12430:88;12537:4;12534:1;12527:15;12561:4;12558:1;12551:15;12578:191;12618:3;12637:20;12655:1;12637:20;:::i;:::-;12632:25;;12671:20;12689:1;12671:20;:::i;:::-;12666:25;;12714:1;12711;12707:9;12700:16;;12735:3;12732:1;12729:10;12726:36;;;12742:18;;:::i;:::-;12726:36;12578:191;;;;:::o;12775:180::-;12823:77;12820:1;12813:88;12920:4;12917:1;12910:15;12944:4;12941:1;12934:15;12961:320;13005:6;13042:1;13036:4;13032:12;13022:22;;13089:1;13083:4;13079:12;13110:18;13100:81;;13166:4;13158:6;13154:17;13144:27;;13100:81;13228:2;13220:6;13217:14;13197:18;13194:38;13191:84;;13247:18;;:::i;:::-;13191:84;13012:269;12961:320;;;:::o;13287:332::-;13408:4;13446:2;13435:9;13431:18;13423:26;;13459:71;13527:1;13516:9;13512:17;13503:6;13459:71;:::i;:::-;13540:72;13608:2;13597:9;13593:18;13584:6;13540:72;:::i;:::-;13287:332;;;;;:::o;13625:188::-;13663:3;13682:18;13698:1;13682:18;:::i;:::-;13677:23;;13714:18;13730:1;13714:18;:::i;:::-;13709:23;;13755:1;13752;13748:9;13741:16;;13778:4;13773:3;13770:13;13767:39;;;13786:18;;:::i;:::-;13767:39;13625:188;;;;:::o;13819:164::-;13959:16;13955:1;13947:6;13943:14;13936:40;13819:164;:::o;13989:366::-;14131:3;14152:67;14216:2;14211:3;14152:67;:::i;:::-;14145:74;;14228:93;14317:3;14228:93;:::i;:::-;14346:2;14341:3;14337:12;14330:19;;13989:366;;;:::o;14361:419::-;14527:4;14565:2;14554:9;14550:18;14542:26;;14614:9;14608:4;14604:20;14600:1;14589:9;14585:17;14578:47;14642:131;14768:4;14642:131;:::i;:::-;14634:139;;14361:419;;;:::o;14786:158::-;14926:10;14922:1;14914:6;14910:14;14903:34;14786:158;:::o;14950:365::-;15092:3;15113:66;15177:1;15172:3;15113:66;:::i;:::-;15106:73;;15188:93;15277:3;15188:93;:::i;:::-;15306:2;15301:3;15297:12;15290:19;;14950:365;;;:::o;15321:419::-;15487:4;15525:2;15514:9;15510:18;15502:26;;15574:9;15568:4;15564:20;15560:1;15549:9;15545:17;15538:47;15602:131;15728:4;15602:131;:::i;:::-;15594:139;;15321:419;;;:::o;15746:410::-;15786:7;15809:20;15827:1;15809:20;:::i;:::-;15804:25;;15843:20;15861:1;15843:20;:::i;:::-;15838:25;;15898:1;15895;15891:9;15920:30;15938:11;15920:30;:::i;:::-;15909:41;;16099:1;16090:7;16086:15;16083:1;16080:22;16060:1;16053:9;16033:83;16010:139;;16129:18;;:::i;:::-;16010:139;15794:362;15746:410;;;;:::o;16162:180::-;16210:77;16207:1;16200:88;16307:4;16304:1;16297:15;16331:4;16328:1;16321:15;16348:185;16388:1;16405:20;16423:1;16405:20;:::i;:::-;16400:25;;16439:20;16457:1;16439:20;:::i;:::-;16434:25;;16478:1;16468:35;;16483:18;;:::i;:::-;16468:35;16525:1;16522;16518:9;16513:14;;16348:185;;;;:::o;16539:157::-;16679:9;16675:1;16667:6;16663:14;16656:33;16539:157;:::o;16702:365::-;16844:3;16865:66;16929:1;16924:3;16865:66;:::i;:::-;16858:73;;16940:93;17029:3;16940:93;:::i;:::-;17058:2;17053:3;17049:12;17042:19;;16702:365;;;:::o;17073:419::-;17239:4;17277:2;17266:9;17262:18;17254:26;;17326:9;17320:4;17316:20;17312:1;17301:9;17297:17;17290:47;17354:131;17480:4;17354:131;:::i;:::-;17346:139;;17073:419;;;:::o;17498:194::-;17538:4;17558:20;17576:1;17558:20;:::i;:::-;17553:25;;17592:20;17610:1;17592:20;:::i;:::-;17587:25;;17636:1;17633;17629:9;17621:17;;17660:1;17654:4;17651:11;17648:37;;;17665:18;;:::i;:::-;17648:37;17498:194;;;;:::o;17698:442::-;17847:4;17885:2;17874:9;17870:18;17862:26;;17898:71;17966:1;17955:9;17951:17;17942:6;17898:71;:::i;:::-;17979:72;18047:2;18036:9;18032:18;18023:6;17979:72;:::i;:::-;18061;18129:2;18118:9;18114:18;18105:6;18061:72;:::i;:::-;17698:442;;;;;;:::o;18146:::-;18295:4;18333:2;18322:9;18318:18;18310:26;;18346:71;18414:1;18403:9;18399:17;18390:6;18346:71;:::i;:::-;18427:72;18495:2;18484:9;18480:18;18471:6;18427:72;:::i;:::-;18509;18577:2;18566:9;18562:18;18553:6;18509:72;:::i;:::-;18146:442;;;;;;:::o;18594:162::-;18734:14;18730:1;18722:6;18718:14;18711:38;18594:162;:::o;18762:366::-;18904:3;18925:67;18989:2;18984:3;18925:67;:::i;:::-;18918:74;;19001:93;19090:3;19001:93;:::i;:::-;19119:2;19114:3;19110:12;19103:19;;18762:366;;;:::o;19134:419::-;19300:4;19338:2;19327:9;19323:18;19315:26;;19387:9;19381:4;19377:20;19373:1;19362:9;19358:17;19351:47;19415:131;19541:4;19415:131;:::i;:::-;19407:139;;19134:419;;;:::o;19559:553::-;19736:4;19774:3;19763:9;19759:19;19751:27;;19788:71;19856:1;19845:9;19841:17;19832:6;19788:71;:::i;:::-;19869:72;19937:2;19926:9;19922:18;19913:6;19869:72;:::i;:::-;19951;20019:2;20008:9;20004:18;19995:6;19951:72;:::i;:::-;20033;20101:2;20090:9;20086:18;20077:6;20033:72;:::i;:::-;19559:553;;;;;;;:::o;20118:332::-;20239:4;20277:2;20266:9;20262:18;20254:26;;20290:71;20358:1;20347:9;20343:17;20334:6;20290:71;:::i;:::-;20371:72;20439:2;20428:9;20424:18;20415:6;20371:72;:::i;:::-;20118:332;;;;;:::o;20456:172::-;20596:24;20592:1;20584:6;20580:14;20573:48;20456:172;:::o;20634:366::-;20776:3;20797:67;20861:2;20856:3;20797:67;:::i;:::-;20790:74;;20873:93;20962:3;20873:93;:::i;:::-;20991:2;20986:3;20982:12;20975:19;;20634:366;;;:::o;21006:419::-;21172:4;21210:2;21199:9;21195:18;21187:26;;21259:9;21253:4;21249:20;21245:1;21234:9;21230:17;21223:47;21287:131;21413:4;21287:131;:::i;:::-;21279:139;;21006:419;;;:::o;21431:153::-;21571:5;21567:1;21559:6;21555:14;21548:29;21431:153;:::o;21590:365::-;21732:3;21753:66;21817:1;21812:3;21753:66;:::i;:::-;21746:73;;21828:93;21917:3;21828:93;:::i;:::-;21946:2;21941:3;21937:12;21930:19;;21590:365;;;:::o;21961:419::-;22127:4;22165:2;22154:9;22150:18;22142:26;;22214:9;22208:4;22204:20;22200:1;22189:9;22185:17;22178:47;22242:131;22368:4;22242:131;:::i;:::-;22234:139;;21961:419;;;:::o;22386:153::-;22526:5;22522:1;22514:6;22510:14;22503:29;22386:153;:::o;22545:365::-;22687:3;22708:66;22772:1;22767:3;22708:66;:::i;:::-;22701:73;;22783:93;22872:3;22783:93;:::i;:::-;22901:2;22896:3;22892:12;22885:19;;22545:365;;;:::o;22916:419::-;23082:4;23120:2;23109:9;23105:18;23097:26;;23169:9;23163:4;23159:20;23155:1;23144:9;23140:17;23133:47;23197:131;23323:4;23197:131;:::i;:::-;23189:139;;22916:419;;;:::o;23341:168::-;23481:20;23477:1;23469:6;23465:14;23458:44;23341:168;:::o;23515:366::-;23657:3;23678:67;23742:2;23737:3;23678:67;:::i;:::-;23671:74;;23754:93;23843:3;23754:93;:::i;:::-;23872:2;23867:3;23863:12;23856:19;;23515:366;;;:::o;23887:419::-;24053:4;24091:2;24080:9;24076:18;24068:26;;24140:9;24134:4;24130:20;24126:1;24115:9;24111:17;24104:47;24168:131;24294:4;24168:131;:::i;:::-;24160:139;;23887:419;;;:::o;24312:442::-;24461:4;24499:2;24488:9;24484:18;24476:26;;24512:71;24580:1;24569:9;24565:17;24556:6;24512:71;:::i;:::-;24593:72;24661:2;24650:9;24646:18;24637:6;24593:72;:::i;:::-;24675;24743:2;24732:9;24728:18;24719:6;24675:72;:::i;:::-;24312:442;;;;;;:::o;24760:102::-;24802:8;24849:5;24846:1;24842:13;24821:34;;24760:102;;;:::o;24868:848::-;24929:5;24936:4;24960:6;24951:15;;24984:5;24975:14;;24998:712;25019:1;25009:8;25006:15;24998:712;;;25114:4;25109:3;25105:14;25099:4;25096:24;25093:50;;;25123:18;;:::i;:::-;25093:50;25173:1;25163:8;25159:16;25156:451;;;25588:4;25581:5;25577:16;25568:25;;25156:451;25638:4;25632;25628:15;25620:23;;25668:32;25691:8;25668:32;:::i;:::-;25656:44;;24998:712;;;24868:848;;;;;;;:::o;25722:1073::-;25776:5;25967:8;25957:40;;25988:1;25979:10;;25990:5;;25957:40;26016:4;26006:36;;26033:1;26024:10;;26035:5;;26006:36;26102:4;26150:1;26145:27;;;;26186:1;26181:191;;;;26095:277;;26145:27;26163:1;26154:10;;26165:5;;;26181:191;26226:3;26216:8;26213:17;26210:43;;;26233:18;;:::i;:::-;26210:43;26282:8;26279:1;26275:16;26266:25;;26317:3;26310:5;26307:14;26304:40;;;26324:18;;:::i;:::-;26304:40;26357:5;;;26095:277;;26481:2;26471:8;26468:16;26462:3;26456:4;26453:13;26449:36;26431:2;26421:8;26418:16;26413:2;26407:4;26404:12;26400:35;26384:111;26381:246;;;26537:8;26531:4;26527:19;26518:28;;26572:3;26565:5;26562:14;26559:40;;;26579:18;;:::i;:::-;26559:40;26612:5;;26381:246;26652:42;26690:3;26680:8;26674:4;26671:1;26652:42;:::i;:::-;26637:57;;;;26726:4;26721:3;26717:14;26710:5;26707:25;26704:51;;;26735:18;;:::i;:::-;26704:51;26784:4;26777:5;26773:16;26764:25;;25722:1073;;;;;;:::o;26801:281::-;26859:5;26883:23;26901:4;26883:23;:::i;:::-;26875:31;;26927:25;26943:8;26927:25;:::i;:::-;26915:37;;26971:104;27008:66;26998:8;26992:4;26971:104;:::i;:::-;26962:113;;26801:281;;;;:::o;27088:143::-;27145:5;27176:6;27170:13;27161:22;;27192:33;27219:5;27192:33;:::i;:::-;27088:143;;;;:::o;27237:351::-;27307:6;27356:2;27344:9;27335:7;27331:23;27327:32;27324:119;;;27362:79;;:::i;:::-;27324:119;27482:1;27507:64;27563:7;27554:6;27543:9;27539:22;27507:64;:::i;:::-;27497:74;;27453:128;27237:351;;;;:::o;27594:180::-;27642:77;27639:1;27632:88;27739:4;27736:1;27729:15;27763:4;27760:1;27753:15;27780:170;27810:1;27827:18;27843:1;27827:18;:::i;:::-;27822:23;;27859:18;27875:1;27859:18;:::i;:::-;27854:23;;27896:1;27886:35;;27901:18;;:::i;:::-;27886:35;27942:1;27939;27935:9;27930:14;;27780:170;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "40818": [{ "start": 3922, "length": 32 }],
      "40820": [{ "start": 3873, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "SECONDS_PER_YEAR()": "e6a69ab8",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "assetsOf(address)": "2c62fa10",
    "balanceOf(address)": "70a08231",
    "baseRatePerSecond()": "d90e0264",
    "borrow(uint256)": "c5ebeaec",
    "borrowCap()": "44d9dca6",
    "borrowIndex()": "aa5af0fd",
    "collateral()": "d8dfeb45",
    "collateralAmount(address)": "b2cd0fdc",
    "collateralValueE18(address)": "f00d9ab1",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "debtOf(address)": "d283e75f",
    "debtValueE18(address)": "7748f5c6",
    "decimals()": "313ce567",
    "deposit(uint256,address)": "6e553f65",
    "isHealthy(address)": "d4d9bc68",
    "lastAccrual()": "7b3baab4",
    "liqBonusBps()": "0c0e717b",
    "liqThresholdBps()": "8eb80efe",
    "liquidate(address,uint256,address)": "4914c008",
    "ltvBps()": "276b7377",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "minCash()": "bdb30aa0",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "optimalUtilization()": "6290cd1c",
    "oracle()": "7dc0d1d0",
    "owner()": "8da5cb5b",
    "previewAccruedInterest()": "c78e2919",
    "previewAccruedInterestOf(address)": "c09f28df",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewLenderAccruedInterestOf(address)": "c6770415",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "principalScaled(address)": "4c642be6",
    "redeem(uint256,address,address)": "ba087652",
    "renounceOwnership()": "715018a6",
    "repay(uint256,address)": "acb70815",
    "setIntegrations(address,address)": "10af06a2",
    "setLiquidityParams(uint256,uint256)": "b857b063",
    "setRateParams(uint256,uint256,uint256,uint256)": "b02867c3",
    "setRiskParams(uint256,uint256,uint256)": "ced65b01",
    "slope1PerSecond()": "d726ae98",
    "slope2PerSecond()": "6ec6df0e",
    "symbol()": "95d89b41",
    "totalAssets()": "01e1d114",
    "totalBorrows()": "47bd3718",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdraw(uint256,address,address)": "b460af94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"IntegrationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minCash\",\"type\":\"uint256\"}],\"name\":\"LiquidityParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRatePerSecond\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slope1PerSecond\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slope2PerSecond\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"optimalUtilization\",\"type\":\"uint256\"}],\"name\":\"RateParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ltvBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqThresholdBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqBonusBps\",\"type\":\"uint256\"}],\"name\":\"RiskParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SECONDS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"assetsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRatePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"contract ICollateralVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralValueE18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"debtOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"debtValueE18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isHealthy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAccrual\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liqBonusBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liqThresholdBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAssets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seizeTo\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltvBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimalUtilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previewAccruedInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"previewAccruedInterestOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"previewLenderAccruedInterestOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"principalScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateral_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"name\":\"setIntegrations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrowCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minCash\",\"type\":\"uint256\"}],\"name\":\"setLiquidityParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"basePerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1PerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2PerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optimalU\",\"type\":\"uint256\"}],\"name\":\"setRateParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ltvBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liqThresholdBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liqBonusBps\",\"type\":\"uint256\"}],\"name\":\"setRiskParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slope1PerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slope2PerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LendingVault.sol\":\"LendingVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30\",\"dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xa667ad942f67a3a72830ba2db2556b22c94a0d0e7b934cb1af19dbb52c701011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a04504e81403d9f3c45593e0e29f928ff93fbcd11ea961aa8cbd96b05f80aa6e\",\"dweb:/ipfs/QmZtHcvctLMa4Ap1ayqq1kyKt8EN5Ni2851daEdjNNYacG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x8796151c7e8fdd75a70d747201065f6d0d969d6a728a2b51804ed1e0c927a8c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08972d66aa8d257870ba18e5a421407dfbf2372c6846b4a6d1701c271763256\",\"dweb:/ipfs/QmXsbe8iJCCXxbiKJma9MsererAQNMrPT2WqF719g1zvb1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1183b415155c1a7bf56d45edad5b17caf0da70935ac420698cbe8afb6750cbb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21d9edaeb3e5e8f93eb0fdab41530654e8169b1990b3bbfcf5e4527c52aa03f5\",\"dweb:/ipfs/QmWrqpNW3x5k3pTjvrT8XU1hauHnXTjqaPL2tfzMuWYosj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x359666de356b8ed3f796fe04d832f12ae713fae01be44dce7cd80ad7bacf5593\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a086fa3e87d91911fb79975661510feafa3203fef4ea901b25bbdd7040c5e4c3\",\"dweb:/ipfs/QmUpEMBJ6cU497f5wMJbP94crAVzG2Pb2Aw69qbA5fG5Gu\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x947aadb127ce0a07acc4e04c3a6fb99d5f484421e91090942e74e5ce88ac6dd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef4fb852b15ca2610e24983fa352ae70e7be9a41365427770a3be60f422ffe8\",\"dweb:/ipfs/QmWhb3iVqZ7o6tD1fn58b4j5nYu4JjnvvVib2xRnUNurHs\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"src/LendingVault.sol\":{\"keccak256\":\"0x7c20a47872e77a488aef352a10fd68f123ac3feef273b9a426bad7db7f4f173e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b53fa588e3524d845b60ea9138a9bb36e5184a0429732924a608bdd4e3daf02a\",\"dweb:/ipfs/QmSg19fHmhJAqxYjh62CJwuKmVfQ4WEGtetpT7bxUTn9oY\"]},\"src/interfaces/ICollateralVault.sol\":{\"keccak256\":\"0x2bbc303e79d96b97b4bdaf9098d5f26df82d9afeb3eaaba10ce68ac93be35d32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489077b311ea03bdf2b0d447ac6e42a522703b857240fc31c7fd0e403ab720cc\",\"dweb:/ipfs/QmeihHNa9UimWmGCaqre6g4GjFpKCCBkHFWZbqthVxbRH1\"]},\"src/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x7546a72915254b238f00028002deb389003596b1301b022cd390873aeca17b23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08cc678d5d3595bca9f7261a11a902d7b102696debf3be53d20a7aa089efbfa\",\"dweb:/ipfs/QmZy5hmfwweNhJcECj4EDU6UtXqsMCo4VbfbbeuNg7mKft\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "asset_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "balance", "type": "uint256" },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "approver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxMint"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxRedeem"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxWithdraw"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "collateral",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "IntegrationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowCap",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minCash",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityParamsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseRatePerSecond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slope1PerSecond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slope2PerSecond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "optimalUtilization",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RateParamsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ltvBps",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "liqThresholdBps",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "liqBonusBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RiskParamsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SECONDS_PER_YEAR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetsOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseRatePerSecond",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowCap",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowIndex",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateral",
          "outputs": [
            {
              "internalType": "contract ICollateralVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralValueE18",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtValueE18",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isHealthy",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastAccrual",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liqBonusBps",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liqThresholdBps",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "repayAssets",
              "type": "uint256"
            },
            { "internalType": "address", "name": "seizeTo", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ltvBps",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner_", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner_", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minCash",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "optimalUtilization",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "previewAccruedInterest",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewAccruedInterestOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewLenderAccruedInterestOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "principalScaled",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            {
              "internalType": "address",
              "name": "onBehalfOf",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "collateral_",
              "type": "address"
            },
            { "internalType": "address", "name": "oracle_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIntegrations"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_borrowCap",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_minCash", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "basePerSec",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slope1PerSec",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slope2PerSec",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "optimalU", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRateParams"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_ltvBps", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "_liqThresholdBps",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_liqBonusBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRiskParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slope1PerSecond",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slope2PerSecond",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalBorrows",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."
          },
          "balanceOf(address)": {
            "details": "Returns the value of tokens owned by `account`."
          },
          "convertToAssets(uint256)": {
            "details": "Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
          },
          "convertToShares(uint256)": {
            "details": "Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
          },
          "decimals()": {
            "details": "Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}."
          },
          "deposit(uint256,address)": {
            "details": "Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
          },
          "maxDeposit(address)": {
            "details": "Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."
          },
          "maxMint(address)": {
            "details": "Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."
          },
          "mint(uint256,address)": {
            "details": "Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
          },
          "name()": { "details": "Returns the name of the token." },
          "owner()": { "details": "Returns the address of the current owner." },
          "previewDeposit(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
          },
          "previewMint(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."
          },
          "previewRedeem(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."
          },
          "previewWithdraw(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
          },
          "redeem(uint256,address,address)": {
            "details": "Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalAssets()": {
            "details": "Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."
          },
          "totalSupply()": {
            "details": "Returns the value of tokens in existence."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdraw(uint256,address,address)": {
            "details": "Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": false, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/LendingVault.sol": "LendingVault" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
        "urls": [
          "bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
          "dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
        "urls": [
          "bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
          "dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
        "urls": [
          "bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
          "dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4",
        "urls": [
          "bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30",
          "dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xa667ad942f67a3a72830ba2db2556b22c94a0d0e7b934cb1af19dbb52c701011",
        "urls": [
          "bzz-raw://a04504e81403d9f3c45593e0e29f928ff93fbcd11ea961aa8cbd96b05f80aa6e",
          "dweb:/ipfs/QmZtHcvctLMa4Ap1ayqq1kyKt8EN5Ni2851daEdjNNYacG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994",
        "urls": [
          "bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c",
          "dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
        "urls": [
          "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
          "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0x8796151c7e8fdd75a70d747201065f6d0d969d6a728a2b51804ed1e0c927a8c9",
        "urls": [
          "bzz-raw://a08972d66aa8d257870ba18e5a421407dfbf2372c6846b4a6d1701c271763256",
          "dweb:/ipfs/QmXsbe8iJCCXxbiKJma9MsererAQNMrPT2WqF719g1zvb1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
        "urls": [
          "bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
          "dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x1183b415155c1a7bf56d45edad5b17caf0da70935ac420698cbe8afb6750cbb2",
        "urls": [
          "bzz-raw://21d9edaeb3e5e8f93eb0fdab41530654e8169b1990b3bbfcf5e4527c52aa03f5",
          "dweb:/ipfs/QmWrqpNW3x5k3pTjvrT8XU1hauHnXTjqaPL2tfzMuWYosj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0x359666de356b8ed3f796fe04d832f12ae713fae01be44dce7cd80ad7bacf5593",
        "urls": [
          "bzz-raw://a086fa3e87d91911fb79975661510feafa3203fef4ea901b25bbdd7040c5e4c3",
          "dweb:/ipfs/QmUpEMBJ6cU497f5wMJbP94crAVzG2Pb2Aw69qbA5fG5Gu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
        "urls": [
          "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
          "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x947aadb127ce0a07acc4e04c3a6fb99d5f484421e91090942e74e5ce88ac6dd2",
        "urls": [
          "bzz-raw://0ef4fb852b15ca2610e24983fa352ae70e7be9a41365427770a3be60f422ffe8",
          "dweb:/ipfs/QmWhb3iVqZ7o6tD1fn58b4j5nYu4JjnvvVib2xRnUNurHs"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "src/LendingVault.sol": {
        "keccak256": "0x7c20a47872e77a488aef352a10fd68f123ac3feef273b9a426bad7db7f4f173e",
        "urls": [
          "bzz-raw://b53fa588e3524d845b60ea9138a9bb36e5184a0429732924a608bdd4e3daf02a",
          "dweb:/ipfs/QmSg19fHmhJAqxYjh62CJwuKmVfQ4WEGtetpT7bxUTn9oY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICollateralVault.sol": {
        "keccak256": "0x2bbc303e79d96b97b4bdaf9098d5f26df82d9afeb3eaaba10ce68ac93be35d32",
        "urls": [
          "bzz-raw://489077b311ea03bdf2b0d447ac6e42a522703b857240fc31c7fd0e403ab720cc",
          "dweb:/ipfs/QmeihHNa9UimWmGCaqre6g4GjFpKCCBkHFWZbqthVxbRH1"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPriceOracle.sol": {
        "keccak256": "0x7546a72915254b238f00028002deb389003596b1301b022cd390873aeca17b23",
        "urls": [
          "bzz-raw://a08cc678d5d3595bca9f7261a11a902d7b102696debf3be53d20a7aa089efbfa",
          "dweb:/ipfs/QmZy5hmfwweNhJcECj4EDU6UtXqsMCo4VbfbbeuNg7mKft"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 37
}
